<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="nordic-apis.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title><a href="http://www.nordicapis.com/events/2016-platform-summit/">Nordic APIs 2016 Platform Summit</a>, Stockholm</title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a> (<a href="mailto:dret@ca.com"><code>dret@ca.com</code></a>)</author>
	<affiliation><a href="http://www.ca.com/">CA Technologies</a>, <a href="http://www.apiacademy.co/">API Academy</a></affiliation>
	<copyright>2016 Erik Wilde</copyright>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Title</th>
					<th valign="bottom">Slides</th>
					<th valign="bottom">Additional Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td valign="top">
							<b><span class="summary"><hotspot:title/></span><span class="toggle">:</span></b> <span class="toggle"><span class="description"><hotspot:toc class="abstract"/></span></span>
						</td>
						<td align="center"><hotspot:presentation-link title="Presentation Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<presentation id="microservices-gardening">
		<title>Microservice Gardening</title>
		<toc class="abstract">Microservices as an architectural approach are a logical consequence of the containerization of software infrastructure. Microservices as the result of a containerized landscape require a different mindset and management approach for keeping track of the more diverse, dynamic, and decentralized set of services. This talk takes a closer look at those places where becoming an effective microservice gardener presents some challenges, and where lessons learned from existing decentralized systems can present us with solutions that have been practiced and perfected since the Web turned into the largest containerized microservices ecosystem about 25 years ago.</toc>
		<toc class="resources"><a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture">Microservices Book</a>&#160;· <a href="http://dret.net/netdret/publications#pau09a" title='Cesare Pautasso and Erik Wilde, "Why is the Web Loosely Coupled? A Multi-Faceted Metric for Service Design", 18th International World Wide Web Conference (WWW2009), Madrid, Spain, April 2009'>Loose Coupling</a></toc>
		<date short="2016-10-25">October 25, 2016</date>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="intro">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>While at UC Berkeley, working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>While at EMC, working on transforming software products into service platforms</li>
					<li>While at Siemens, working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in May 2016 and now all about API Design and Strategy</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a>, and <a href="http://dret.typepad.com/dretblog/">my blog</a></li>
				</ul>
			</slide>
			<slide id="api-academy">
				<title>API Academy</title>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver)</li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati)</li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London)</li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich)</li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Writing (blogs, articles, books)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="MSA-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">electronic version for free courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
			<slide id="microservices-are-soa">
				<title>Microservices are SOA!</title>
				<img title="Microservices are SOA!" src="microservices-are-soa.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="kafka">
			<title>The Kafka Method</title>
			<slide id="castle">
				<title>The Castle</title>
				<img title="The Perfect Machine" href="https://commons.wikimedia.org/wiki/File:Burg_Hohenzollern_ak.jpg" src="hohenzollern-castle.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="bureaucracy">
				<title>Bureaucracy</title>
				<ul>
					<li>Bureaucracy evolved for a reason</li>
					<ul>
						<li>Clearly defined <em>model of input and output</em> of processing units</li>
						<li>Implementation issues of the processing units are <em>hidden</em></li>
						<li>Processing units can scale because of <em>encapsulation and statelessness</em></li>
						<li>Processing steps can be <em>easily composed</em> while keeping steps separate</li>
					</ul>
					<li>Well-designed service landscapes have the exact same properties</li>
					<ul>
						<li><em>Messaging models</em> instead of paper forms</li>
						<li>Message models are <em>as shallow as possible</em></li>
						<li><em>Stateless interactions</em> allow for easy load balancing</li>
						<li>Resource identifiers and hypermedia allow <em>interlinked workflows</em></li>
					</ul>
				</ul>
			</slide>
			<slide id="api-focus">
				<title>APIs are Front and Center</title>
				<ul>
					<li>The only visibility into a service is its API</li>
					<li>APIs should avoid letting their <q>implementation shine through</q></li>
					<li>The two main goals of an API are <em>interaction</em> and <em>encapsulation</em></li>
					<ul>
						<li><em>Interaction</em> should be as simple/easy as possible through the API</li>
						<li><em>Encapsulation</em> ensures that the implementation is invisible</li>
					</ul>
					<li>Help developers to navigate the evolving landscape of interlinked APIs</li>
				</ul>
			</slide>
			<slide id="surface">
				<title>Be Superficial</title>
				<ul>
					<li>The only thing that matters is the <em>Service Surface</em></li>
					<ul>
						<li>Make the surface <em>as shallow as possible</em> to reduce coupling</li>
						<li>Resist the temptation to <em>expose your model</em> just because you can</li>
					</ul>
					<li>Concepts must be well-defined but not necessarily deeply modeled</li>
					<ul><em>Domain Driven Design (DDD)</em> provides a framework for <em>bounded contexts</em></ul>
				</ul>
			</slide>
			<slide id="bimodal-it">
				<title>Bimodal IT</title>
				<img title="Bimodal IT office workers" href="https://en.wikipedia.org/wiki/Minions_(film)" src="minions.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="kafka-and-bimodal">
				<title>Kafka and Bimodal IT</title>
				<ul>
					<li><em>The Castle</em> is not going anywhere anytime soon</li>
					<ul>
						<li>Establishing <q>rules of engagement</q> make interactions well-defined</li>
						<li>Natural transition possible (if required) using the <em>Strangler Pattern</em></li>
					</ul>
					<li>Customers/consumers do not know if how/where APIs are implemented</li>
					<ul>
						<li>Establish uniform documentation/description/discovery strategy</li>
						<li>Embrace diversity to cover old as well as new services</li>
					</ul>
					<li>APIs are <em>connective tissue and protective insulation layers</em></li>
				</ul>
			</slide>
		</part>
		<part id="documentation-description">
			<title>Documentation and Description</title>
			<slide id="discoverable-concepts">
				<title>Discoverable Concepts</title>
				<ul>
					<li>There is not one single API documentation format</li>
					<ul>
						<li>API style and tooling affect the choice of API documentation format</li>
						<li>Microservices allow teams to pick their preferred format/tools</li>
					</ul>
					<li>Manage diversity by focusing on the surface</li>
					<ul>
						<li>Webby API documentation should be able to clearly markup Web concepts</li>
					</ul>
					<li><q>Harvesting Web concepts</q> should be relatively easy</li>
					<ul>
						<li>Microformats/RDFa/Microdata or similar tooling might be helpful</li>
						<li><em>Building </em> becomes a natural part of API design and documentation</li>
					</ul>
				</ul>
			</slide>
			<slide id="surface-extension">
				<title>Extend the Surface</title>
				<ul>
					<li><em>Web Concepts</em> are different for different communities</li>
					<li>Adding concepts should be relatively easy</li>
					<ul>
						<li>Adding individual values just requires adding specifications/services</li>
						<li>Adding concepts introduces a new <q>class of concepts</q></li>
					</ul>
					<li>What is the best way to add and manage and discover extensions?</li>
					<ul>
						<li>A <a href="http://tools.ietf.org/html/draft-wilde-registries">registry</a> is one possible way of managing extensions</li>
						<li><a href="http://webconcepts.info/concepts/">Web Concepts</a> could be the initial registry contents</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="service-discovery">
			<title>Service Discovery</title>
			<slide id="monolith">
				<title>The Dreaded Monolith</title>
				<img title="Where you come from..." href="https://upload.wikimedia.org/wikipedia/commons/7/7b/Weltmaschine_gsellmann1.JPG" src="monolith.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="MS-neat">
				<title>Microservices: The Starting Point</title>
				<img title="Where you think you're going..." href="https://static.pexels.com/photos/12598/96917deb7705adcee76b65caf8c652b1.jpg" src="microservices-ideal.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="MS-messy">
				<title>Microservices Over Time</title>
				<img title="By Lachlan Donald from Melbourne, Australia (Sharpest tool in the shed) [CC BY 2.0 (http://creativecommons.org/licenses/by/2.0)], via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File%3AHuge_collection_of_tools_in_a_store_in_Chloride%2C_a_ghost_town_in_New_Mexico%2C_USA_-_July_2013.jpg" src="microservices-reality.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="ms-decentralize">
				<title>Decentralize Documentation/Discovery</title>
				<ul>
					<li>MS is all about making services more independent and self-contained</li>
					<ul>
						<li><em>Documentation</em> is under control and responsibility of service owners</li>
						<li>Decentralized documentation means polyglot documentation</li>
						<li><em>Discovery</em> has to support polyglotism and decentralization</li>
					</ul>
					<li>Decentralized discovery is based on pulling/crawling diverse data</li>
					<ol>
						<li>Start by <a href="https://tools.ietf.org/html/draft-wilde-service-link-rel">finding available description/documentation resources</a></li>
						<li>Process these based on supported description/documentation formats</li>
						<li>Increase support if required by the evolving ecosystem</li>
						<li>Provide discovery services based on the resulting service ecosystem snapshot</li>
					</ol>
					<li>Added benefit: Reality-based view on description/documentation/service ecosystem</li>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="data-driven">
				<title>Data-Driven API Landscaping</title>
				<ul>
					<li>Keep track of API design and behavior and make it visible</li>
					<ul>
						<li><em>Design instrumentation</em> allows to keep track of service design</li>
						<li><em>Run-time instrumentation</em> allows to keep track of service behavior</li>
					</ul>
					<li>Understand the history, status, and direction of the API landscape</li>
					<ul>
						<li>Avoid tight coupling between landscaping and service designs and behaviors</li>
						<li>All tooling should be based on open (and extensible) standards</li>
					</ul>
				</ul>
			</slide>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.jpg" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Slides online: <a href="http://dret.net/lectures/nordic-apis-2016/"><code>dret.net/lectures/nordic-apis-2016/</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/nordic-apis-2016"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="ecosystem-complexity">
		<title>Complexity of Mobile and IoT Ecosystems</title>
		<toc class="resources"><a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html" title="Erik Wilde: Patterns for Robust Extensibility">Patterns for Robust Extensibility</a></toc>
		<toc class="abstract"><em>Mobile</em> and the <em>Internet of Things (IoT)</em> are two examples of particularly rapidly evolving ecosystems. In both cases, the diversity and rate of change (in mobile devices as well as in IoT "things") are challenging factors. This means that it is essential to have an IT architecture in place that provides both the stability and the flexibility to be able to handle the changing landscape. Cleanly identifying and managing services is a foundation that can then be used to quickly and robustly build mobile applications that are based on IoT services.</toc>
		<date short="2016-10-26">October 26, 2016</date>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="intro">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>While at UC Berkeley, working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>While at EMC, working on transforming software products into service platforms</li>
					<li>While at Siemens, working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in May 2016 and now all about API Design and Strategy</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a>, and <a href="http://dret.typepad.com/dretblog/">my blog</a></li>
				</ul>
			</slide>
			<slide id="api-academy">
				<title>API Academy</title>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver)</li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati)</li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London)</li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich)</li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Writing (blogs, articles, books)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="MSA-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">electronic version for free courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="msa-landscape">
			<title>MSA Landscape</title>
			<slide id="apim-landscape">
				<title>MSA and the API Landscape</title>
				<img title="MS/API Landscape" src="apim-landscape.png" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="landscape-explained">
				<title>Explaining the MS API Landscape</title>
				<ul>
					<li>MS and exposed APIs can be different</li>
					<li>APIM should be able to handle internal and exposed APIs</li>
					<li>What's <em>internal</em> and <em>exposed</em> can be a contextual question</li>
					<li>External API users might want to consume more than one set of APIs</li>
					<li>Exposing the landscape or an API gateway are two possible choices</li>
					<ul>
						<li>Exposing the landscape exposes its diversity</li>
						<li>Gateways can be centralized or become part of the <em>MS fabric</em> (e.g., a container)</li>
					</ul>
				</ul>
			</slide>
			<slide id="internet-of-things">
				<title>Internet of Things</title>
				<img title="Many things means many services" href="https://pixabay.com/static/uploads/photo/2015/05/25/05/27/network-782707_960_720.png" src="iot.png" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="as-basics">
			<title>Activity Streams Basics</title>
			<slide id="AS1">
				<title>Activity Streams 1.0</title>
				<ul>
					<li>Developer effort in an attempt to <q>interconnect social networks</q></li>
					<ul>
						<li>Counter-intuitive given then <q>walled garden</q> nature of most social networks</li>
						<li>Even the <q>social giants</q> need proper plumbing between their services</li>
					</ul>
					<li>Simple and informative standard that was implemented but never (fully) documented</li>
					<ul>
						<li>Some parts of the <q>specification</q> did not see good support in implementations</li>
					</ul>
					<li><q>Enterprise 2.0</q> customers demand stable and official standards</li>
					<ul>
						<li><em>Social Enterprise Platforms</em> are essentially integration platforms</li>
						<li>Only robust and open models turn them into good IT solutions</li>
					</ul>
				</ul>
			</slide>
			<slide id="AS2">
				<title>Activity Streams 2.0</title>
				<ul>
					<li><link href="AS1"/> were successful but not a very solid specification</li>
					<li><q>Social Networks</q> are increasingly important for Enterprise IT</li>
					<ul>
						<li>Enterprises slowly but increasingly understand the necessity for loose coupling</li>
						<li><a href="http://en.wikipedia.org/wiki/Enterprise_social_networking">Enterprise Social Networking</a> has a lot of potential</li>
						<li>Have a protocol to interconnect heterogeneous systems</li>
					</ul>
					<li>Large Enterprise IT providers have pushed for AS to become more mature</li>
					<ul>
						<li>IBM uses AS for interconnecting products for <a href="http://en.wikipedia.org/wiki/Application_lifecycle_management">software lifecycle management</a></li>
						<li>SAP uses AS in their enterprise collaboration tools</li>
						<li>Customers demand for those platforms to be open and extensible</li>
					</ul>
					<li>AS2 is now being standardized in the <a href="http://www.w3.org/" title="World Wide Web Consortium">W3C</a>'s <a href="http://www.w3.org/Social/WG" title="Social Web Working Group">Social Web WG</a></li>
					<ul>
						<li><a href="http://www.w3.org/TR/activitystreams-core/">Activity Streams 2.0</a> and <a href="http://www.w3.org/TR/activitystreams-vocabulary/">Activity Vocabulary</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="as-vocabularies">
			<title>Vocabularies for Activity Streams</title>
			<slide id="as-vocabularies">
				<title>AS needs Vocabularies</title>
				<ul>
					<li>AS is about activities and needs shared understanding</li>
					<li>Basic AS statement: <q><code>Erik added a picture to Flickr</code></q></li>
					<ul>
						<li>Actor: <code>Erik</code></li>
						<li>Verb: <code>add</code></li>
						<li>Object: <code href="https://www.flickr.com/photos/dret/15433487108/">picture URI</code></li>
						<li>Target: <code href="https://www.flickr.com/photos/dret/">Flickr stream URI</code></li>
					</ul>
					<li>AS mixes three ways in how these concepts can be represented</li>
					<ul>
						<li><em>By Value:</em> The actor's name is <q>Erik</q> (good for simple rendering)</li>
						<li><em>By Registry Reference:</em> The well-known verb is <a href="https://www.w3.org/TR/activitystreams-vocabulary/#dfn-add">add</a> (good for shared meaning)</li>
						<li><em>By URI Reference:</em> Erik's <a href="https://www.flickr.com/photos/dret/">Flickr Photostream</a> (good for extensibility)</li>
					</ul>
				</ul>
			</slide>
			<slide id="use-extend-define">
				<title>Use, Extend, or Define?</title>
				<ul>
					<li>AS has three <q>levels</q> of verb expressivity</li>
				</ul>
				<ol>
					<li>Using a well-known verb in the way how it has been defined</li>
					<ul>
						<li><q>Erik just added something to an existing resource.</q></li>
					</ul>
					<li>Extending a well-known verb in ways that make sense for those knowing the extension</li>
					<ul>
						<li><q>For those who know and care, here is additional info about the camera.</q></li>
					</ul>
					<li>Defining new verbs which do not <q>mean</q> anything for those not knowing them</li>
					<ul>
						<li><q>Erik just edited the picture he added earlier.</q></li>
					</ul>
				</ol>
			</slide>
			<slide id="vocabularies">
				<title>Finding/Using Vocabularies</title>
				<img src="snowflakes.jpg" href="http://atompub.org/" style="float : right ; width : 25% ; margin : 0.5em 1em 1em 1em ; "/>
				<ul>
					<li>There is no centralized registry of AS vocabularies</li>
					<ul>
						<li>The AS1 core specification only defines the one verb <q><code>post</code></q></li>
						<li>The <a href="https://github.com/activitystreams/activity-schema/blob/master/activity-schema.md">AS1 base schema</a> defines a set of well-known verbs</li>
						<li>AS1 activities may use verbs other than the well-know ones</li>
						<li><a href="http://activitystrea.ms/specs/json/1.0/#extensions">Extensions</a> can use <em>strings</em> or <em>URIs</em> as verbs (the difference is unclear)</li>
					</ul>
					<li>Everybody is free to define their own snowflakes</li>
					<ul>
						<li>Network effect gains depend on agreement on the level of shared understanding</li>
						<li><em>Only</em> invent something if you absolutely have to</li>
					</ul>
				</ul>
			</slide>
			<slide id="adapting-vocabularies">
				<title>Adapting Vocabularies</title>
				<ul>
					<li>Consider this when designing the activities for your course project!</li>
					<li>Reuse an existing activity type (they are loosely defined)</li>
					<li>Add facets to it that you need to satisfy your use case</li>
					<li>Adapting without hijacking is the litmus test of proper reuse</li>
					<ul>
						<li>If somebody does not support your extensions, does it still make sense?</li>
						<li>If this test cannot be satisfied, it is better to invent something new</li>
					</ul>
				</ul>
			</slide>
			<slide id="health">
				<title>Quantified Self and Health</title>
				<ul>
					<li>Using data from wearables to support personal well-being and health</li>
					<ul>
						<li>Producers: Wearables (e.g., activity trackers), general-purpose devices (e.g., activity-enabled smartphones), lab visits</li>
						<li>Transformers: Consuming available data and distilling reports</li>
						<li>Consumers: Users, health coaches, doctors (different granularity of consumption)</li>
					</ul>
					<li>Data production should be independent of specific devices</li>
					<ul>
						<li><a href="https://github.com/dret/exercise/tree/master/EDF">Exercise Data Format (EDF)</a> as a very simple <q>standard</q> for exercise data</li>
						<li>The resources are linked from activities and use a different media type</li>
					</ul>
				</ul>
			</slide>
			<slide id="HIIT">
				<title>Do You Know What <code>HIIT</code> Is?</title>
				<ul>
					<li>Exercise types are considered relevant but not central</li>
					<ul>
						<li><a href="https://github.com/dret/exercise/blob/master/types/API/nikefuel.md">Nike Fuel</a> thinks <code>HIIT</code> is a thing</li>
						<li>Even <a href="http://en.wikipedia.org/wiki/High-intensity_interval_training">Wikipedia thinks it is a thing</a></li>
					</ul>
					<li>It is possible to transform proprietary into unified types</li>
					<ul>
						<li>There is a long list of <a href="https://github.com/dret/exercise/tree/master/types">(currently 435) exercise types</a></li>
						<li>Consumers are mostly not interested which device/service created the exercise data</li>
						<li>A transformer consumes the proprietary types and transforms them into unified types</li>
					</ul>
					<li>A typical pattern of open and extensible system</li>
					<ul>
						<li>Define a minimal but useful model for representing what the system is all about</li>
						<li>Make this model extensible and open so that it can <em>evolve</em> without breaking existing components</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="registries">
			<title>Registries</title>
			<slide id="evolving-value-sets">
				<title>Evolving Value Sets</title>
				<ul>
					<li>Many business documents have evolving value sets</li>
					<ul>
						<li><em>Hard-coding</em> the value set is the simplest way</li>
						<li>Every time the value set changes, the API changes</li>
					</ul>
					<li>Some of these value sets have utility across various services</li>
					<ul>
						<li>Decoupling value sets from APIs decreases dependencies across services</li>
					</ul>
					<li>Registries are a well-known pattern for API-minded organizations</li>
					<ul>
						<li><a href="http://ietf.org/" title="Internet Engineering Task Force">IETF</a> has ~2000 registries <a href="http://www.iana.org/protocols">managed by IANA</a></li>
						<li><a href="http://www.w3.org/" title="World Wide Web Consortium">W3C</a> has no registry system but some specifications are creating their own</li>
					</ul>
				</ul>
			</slide>
			<slide id="language-identification">
				<title>Language Identification</title>
				<ul>
					<li>Language is a concept used across business documents</li>
					<li>Internet/Web language identification relies on <em>language tags</em></li>
					<ul>
						<li><a href="http://tools.ietf.org/html/rfc5646">RFC 5646</a> defines the syntax of language tags: <code>en-US</code></li>
					</ul>
					<li>The <a href="http://www.loc.gov/standards/iso639-2/">language registry</a> is operated by ISO/LoC</li>
					<ul>
						<li>The list of allowed values is defined by the current registry contents</li>
					</ul>
					<li>The <a href="https://www.iso.org/obp/ui/#search">country registry</a> is operated by ISO</li>
					<ul>
						<li>The list of allowed values is defined by the current registry contents</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="protocol-design">
				<title>Scalable Protocol Design</title>
				<ul>
					<li>Use protocols and/or patterns instead of building snowflakes</li>
					<li>Diverse ecosystems create specific challenges for protocols/services</li>
					<li>Separating stable/evolving parts can make a big difference</li>
				</ul>
			</slide>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.jpg" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Slides online: <a href="http://dret.net/lectures/nordic-apis-2016/"><code>dret.net/lectures/nordic-apis-2016/</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/nordic-apis-2016"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>