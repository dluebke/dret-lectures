<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="london.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title>API Academy London 2018</title>
	<presentation id="index">
		<title>Changing APIs at Microservices Scale</title>
		<toc class="abstract">One of the challenges of modern Microservices Architecture is a less centralized locus of design and development. Nurturing a more decentralized way of designing, developing, and evolving services is one of the key value propositions of microservices, and thus this challenge should not be perceived as a "problem to be fixed." Instead, the approach should be to look at a way of how services can be more loosely coupled, so that the traditionally more centralized models of design and evolution can be replaced with techniques that are better suited in the new environment. At a high level, it is all about reducing the need and the desire to control and guide teams in a traditional command-and-control way. Instead, the goal is to empower teams to make their own decisions about design and evolution, but to give them the tools and the support that help them to succeed. This presentation looks at some of the typical differences between a more traditional design/evolve cycle, and one where architecture takes on a more fluid and flexible role.</toc>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
		<affiliation><a href="http://www.apiacademy.co/">API Academy</a>, <a href="http://www.ca.com/">CA Technologies</a></affiliation>
		<date short="2018-02-28">February 28, 2018</date>
		<copyright>2018 Erik Wilde</copyright>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="introduction">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>UC Berkeley (2006-2011), working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>EMC (2011-2014), working on transforming software products into service platforms</li>
					<li>Siemens (2014-2015), working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in 2016 and now all about API Strategy and Design</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="http://dret.typepad.com/dretblog/">my blog</a>, <a href="http://www.linkedin.com/in/netdret">LinkedIn</a>, and <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a></li>
				</ul>
			</slide>
			<slide id="dret">
				<title><code>@dret</code> on Twitter/GitHub</title>
				<img src="dret.png" title="dret" href="http://twitter.com/dret" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-academy">
				<title><a href="http://www.apiacademy.co/">API Academy</a></title>
				<img src="apiacademy-red-black.png" href="http://www.apiacademy.co/" title="API Acacdemy" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver): <a href="http://twitter.com/MattMcLartyBC" class="twitter-follow-button" title="Matt McLarty on Twitter: @MattMcLartyBC"><code>@MattMcLartyBC</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati): <a href="http://twitter.com/mamund" class="twitter-follow-button" title="Mike Amundsen on Twitter: @mamund"><code>@mamund</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mehdi-medjaoui/">Mehdi Medjaoui</a> (San Francisco): <a href="http://twitter.com/medjawii" class="twitter-follow-button" title="Mehdi Medjaoui on Twitter: @medjawii"><code>@medjawii</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London): <a href="http://twitter.com/mitraman" class="twitter-follow-button" title="Ronnie Mitra on Twitter: @mitraman"><code>@mitraman</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich): <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Publishing (blogs, articles, books, <a href="https://soundcloud.com/user-426834320">podcasts</a>)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="msa-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">free electronic version courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="msa-why">
			<title>Why Microservices?</title>
			<slide id="nomonolith">
				<title>Motivation #1: Breaking up the Monolith</title>
				<img title="The Perfect Machine" href="https://commons.wikimedia.org/wiki/File:Burg_Hohenzollern_ak.jpg" src="hohenzollern-castle.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="delivery-speed">
				<title>Motivation #2: Speeding up Product Delivery</title>
				<img title="Farmers' Market Sacramento" href="https://commons.wikimedia.org/wiki/File:Farmers'_market_Sacramento.jpg" src="farmers-market-sacramento.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="msa-apis">
				<title>Microservices and APIs</title>
				<ul>
					<li>APIs are a way to <em>loosely coupled component interfaces</em></li>
					<ul>
						<li>APIs allow removing dependencies between components</li>
						<li>Loose coupling is influenced by a variety of design factors</li>
					</ul>
					<li>Microservices are a way to <em>loosely coupled component implementations</em></li>
					<ul>
						<li>Microservices allow implementing services with fewer constraints</li>
						<li>APIs can be <em>anything</em> but some landscape coherence makes sense</li>
					</ul>
					<li><em>Microservice Architecture</em> means trying to optimize the balance</li>
					<ul>
						<li><em>Avoid slowing down teams</em> because of constrained design options</li>
						<li><em>Help teams to be faster</em> by assisting their design/implementation efforts</li>
					</ul>
				</ul>
			</slide>
			<slide id="apis-interfaces">
				<title>There is no "Microservice APIs"</title>
				<img title='There is no "Microservice API"' src="mugatu-microservices-api.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="msa-six-v">
			<title>The Six V's of Microservice Architecture</title>
			<slide id="vvvvvv">
				<title>6 MSA V Executive Summary</title>
				<ul>
					<li><em>Variety:</em> More design freedom for teams</li>
					<li><em>Volume:</em> Make experimentation economical</li>
					<li><em>Velocity:</em> No more slow coordinated release schedule</li>
					<li><em>Visibility:</em> Teams work decentralized</li>
					<li><em>Vulnerability:</em> More openness means a bigger attack surface</li>
					<li><em>Volatility:</em> Manage dependencies with decentralization in mind</li>
				</ul>
			</slide>
			<slide id="variety">
				<title>Variety</title>
				<ul>
					<li>Increased <em>diversity</em> of the API and implementation landscape</li>
					<li>Manage API descriptions in extensible ways</li>
					<ul>
						<li>Your API ecosystem will evolve and new types will appear</li>
					</ul>
					<li>Provide <em>guidance</em> and <em>assistance</em> for preferred API styles/types</li>
					<ul>
						<li>Guidance should be driven by observed team preferences</li>
						<li>API ecosystems tend to converge around few technology clusters</li>
					</ul>
				</ul>
			</slide>
			<slide id="volume">
				<title>Volume</title>
				<ul>
					<li><em>More services</em> are created because there is less ceremony</li>
					<li>Make API management part of general MSA automation efforts</li>
					<ul>
						<li><em>API landscaping</em> should focus on scalable methods</li>
					</ul>
					<li><em>API landscape automation</em> must be able to adapt</li>
					<ul>
						<li>Build as little bias as possible into the foundation</li>
					</ul>
				</ul>
			</slide>
			<slide id="velocity">
				<title>Velocity</title>
				<ul>
					<li>Services <em>change more often</em> (if required) because of agile practices</li>
					<li><em>Loose coupling</em> should be one of the pillars of API design culture</li>
					<ul>
						<li>Design practices for loose coupling depend a lot on style and technology</li>
					</ul>
					<li>Expose version information as a way how service evolution can be tracked</li>
					<ul>
						<li>Versioning should be <em>informational</em> only (no breaking changes)</li>
						<li><a href="http://semver.org/">Semantic versioning</a> can be exposed through the API</li>
					</ul>
				</ul>
			</slide>
			<slide id="visibility">
				<title>Visibility</title>
				<ul>
					<li>It should be easy to <em>find and use services</em> as building blocks for new ones</li>
				</ul>
			</slide>
			<slide id="vulnerability">
				<title>Vulnerability</title>
				<ul>
					<li>Support <em>service security</em> so that teams can focus on value creation</li>
				</ul>
			</slide>
			<slide id="volatility">
				<title>Volatility</title>
				<ul>
					<li><em>Service decentralization</em> needs different dependency management models</li>
				</ul>
			</slide>
		</part>
		<part id="continuous-architecting">
			<title>How? Continuous Architecting!</title>
			<slide id="api-api">
				<title>API your APIs</title>
				<ul>
					<li>Expose design-time and runtime API information in the API</li>
					<ul>
						<li><em>Design-time</em> allows automation of API landscape overview</li>
						<li><em>Runtime</em> allows automation of API landscape status</li>
					</ul>
					<li>Follow <a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html">robust extensibility principles</a> for these <q>API APIs</q></li>
					<ul>
						<li><em>Meaningful Core:</em> Start with a simple but useful scenario</li>
						<li><em>Extension Points:</em> Think about how scenarios might evolve</li>
						<li><em>Processing Model:</em> Be clear about how extensions are handled</li>
					</ul>
				</ul>
			</slide>
			<slide id="webby-amazon">
				<title>Webby API Design</title>
				<img title="Webby Amazon" src="webby-amazon.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-patterns">
				<title>Emerging API Patterns</title>
				<ul>
					<li>Self-description for APIs is increasing</li>
					<li><a href="http://webconcepts.info/specs/IETF/RFC/7807">Problem details</a> as a way how APIs expose error information</li>
					<ul>
						<li>Enables generic error handling but also allows additional information</li>
					</ul>
					<li><a href="http://webconcepts.info/specs/IETF/I-D/nottingham-json-home">Home documents</a> as a way how APIs provide starting pages</li>
					<ul>
						<li>Enables harvesting of API start points but also allows additional information</li>
					</ul>
					<li><a href="http://webconcepts.info/specs/IETF/I-D/inadarei-api-health-check">Healthcheck reports</a> as a way how APIs expose status information</li>
					<ul>
						<li>Enables landscape-level status reports but also allows additional information</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="q-and-a">
				<title>Thanks! Questions?</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/london-2018"><code>dret.net/lectures/london-2018</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/london-2018"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>