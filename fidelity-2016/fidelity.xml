<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="fidelity.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title>Fidelity API Workshop, Gurugram, India</title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a> (<a href="mailto:dret@ca.com"><code>dret@ca.com</code></a>)</author>
	<affiliation><a href="http://www.ca.com/">CA Technologies</a>, <a href="http://www.apiacademy.co/">API Academy</a></affiliation>
	<date short="2016-11-22">November 22/23, 2016</date>
	<copyright>2016 Erik Wilde</copyright>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Subject</th>
					<th valign="bottom">Slides</th>
					<th valign="bottom">Additional Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td valign="top">
							<b><span class="summary"><hotspot:title/></span><span class="toggle">:</span></b> <span class="toggle"><span class="description"><hotspot:toc class="abstract"/></span></span>
						</td>
						<td align="center"><hotspot:presentation-link title="Presentation Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<presentation id="welcome">
		<title>Welcome, Overview, and Motivation</title>
		<toc class="abstract">APIs increasingly become the <em>connective tissue</em> of IT in general, and the main way of how business is looking at their IT strategy and structure in particular. APIs are what both <em>separate</em> and <em>connect</em> collaborating and communicating peers: They facilitate <em>loose coupling</em> of service providers and consumers and thus strike a balance between the ability to collaborate and cooperate, while still maintaining independence and individual control.</toc>
		<toc class="resources"><a href="http://www.hbs.edu/faculty/Pages/item.aspx?num=193" title="Michael Porter, 'The Competitive Advantage: Creating and Sustaining Superior Performance', Free Press, New York, 1985">Competitive Advantage</a>&#160;· <a href="http://dret.net/netdret/publications#pau09a" title="Cesare Pautasso and Erik Wilde, 'Why is the Web Loosely Coupled? A Multi-Faceted Metric for Service Design', Proceedings of the 18th International World Wide Web Conference, ACM Press, Madrid, Spain, April 2009">Loose Coupling</a></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="intro">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>While at UC Berkeley, working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>While at EMC, working on transforming software products into service platforms</li>
					<li>While at Siemens, working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in May 2016 and now all about API Design and Strategy</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a>, and <a href="http://dret.typepad.com/dretblog/">my blog</a></li>
				</ul>
			</slide>
			<slide id="api-academy">
				<title>API Academy</title>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver)</li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati)</li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London)</li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich)</li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Writing (blogs, articles, books)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="MSA-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">electronic version for free courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="motivation">
			<title>Motivation</title>
			<slide id="value-chains">
				<title>Value Chain</title>
				<ul>
					<li>Business is fundamentally about <em>value chains</em></li>
					<li>Value chains <em>connect business units</em> to create overall value</li>
					<li>Connections are increasingly focusing on <em>passing information along</em></li>
					<li>Passing information requires sophisticated <em>information logistics</em></li>
					<li>Information logistics must <em>reduce friction and maximize flexibility</em></li>
					<li>Friction and flexibility are deciding factors when <em>adapting the value chain</em></li>
					<li>Adapting the value chain needs <em>API landscapes that can adapt easily</em></li>
				</ul>
			</slide>
			<slide id="systems-ecosystems">
				<title>Coupling Matters</title>
				<ul>
					<li>Traditional enterprise IT approaches heavily favor <em>integration</em></li>
					<ul>
						<li>Integration aims at building one system that contains all essential parts</li>
						<li>Integration provides optimization potential</li>
						<li>Integration promises a destination instead of a journey</li>
					</ul>
					<li>Integration cost/benefit analysis depends heavily on how much change is required</li>
					<ul>
						<li>Integrated systems tend to win as long as the future is (roughly) as predicted</li>
						<li>Integrated systems can be costly if adaptation needs necessitate big changes</li>
					</ul>
					<li><em>Ecosystems</em> trade flexibility over integration optimization</li>
					<ul>
						<li>Ecosystems tend to do worse as long as conditions remain mostly stable</li>
						<li>Ecosystems tend to outperform/outlive integrated systems in light of bigger changes</li>
					</ul>
				</ul>
			</slide>
			<slide id="integrated-bike">
				<title>Integration Cost/Benefit</title>
				<img title="Cervelo P5X Triathlon Bike" href="https://www.cervelo.com/en/triathlon/p-series/p5x" src="cervelo-p5x.jpg" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="overview">
			<title>Overview</title>
			<slide id="terminology">
				<title>What is an API?</title>
				<ul>
					<li><em>APIs</em> used to be local interfaces between code components</li>
					<li><em>Network interfaces</em> used to be called <em>protocols</em></li>
					<li><q>APIs</q> still are local interfaces between code components</li>
					<ul>
						<li>Often these are not explicitly labeled as <em>programmatic APIs</em></li>
						<li><a href="http://html5-overview.net">HTML5</a> is a current example for a modern set of programmatic APIs</li>
					</ul>
					<li><q>APIs</q> nowadays often refer to <em>network APIs</em></li>
					<ul>
						<li>They are defined in terms of specific network abstractions</li>
						<li><a href="http://www.programmableweb.com/">ProgrammableWeb</a> has a large collection of public network APIs</li>
					</ul>
				</ul>
			</slide>
			<slide id="public-api-count">
				<title>Public API Count</title>
				<img title="Public API Count by ProgrammableWeb" src="programmable-web.png" style="height : 65% ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-types">
				<title>Public/Partner/Internal APIs</title>
			</slide>
			<slide id="public-api">
				<title>Public APIs</title>
			</slide>
			<slide id="partner-api">
				<title>Partner APIs</title>
			</slide>
			<slide id="internal-api">
				<title>Internal APIs</title>
			</slide>
			<slide id="banking-apis">
				<title>Banking APIs</title>
				<ul>
					<li><a href="https://www.capitalone.com/">Capital One</a> <a href="https://developer.capitalone.com/">DevExchange</a></li>
					<li><a href="https://www.santanderbank.com/">Santander</a> <a href="https://www.santandermerchantservices.com/online/globalgateway/">Global Gateway e4</a></li>
					<li><a href="https://www.sutorbank.de/">Sutor</a> <a href="https://www.sutorbank.de/home/b2b/startup-platform-eng/">Startup Platform</a></li>
				</ul>
			</slide>
			<slide id="banking-test-apis">
				<title>Banking APIs in Test Mode</title>
				<ul>
					<li><a href="https://www.wellsfargo.com/">Wells Fargo</a> <a href="https://developer.wellsfargo.com/">Developer Gateway</a></li>
					<li><a href="https://online.citi.com/">Citibank</a> <a href="https://developer.citi.com/">citi developer hub</a></li>
					<li><a href="http://www.rbs.com/">Royal Bank of Scotland</a> <a href="http://www.bankofapis.com/">Global Gateway e4</a></li>
				</ul>
			</slide>
		</part>
		<part>
			<title>API Design Issues</title>
			<slide id="presentation-microservices">
				<title>Microservices</title>
				<ul>
					<li>Decomposing the Monolith into loosely coupled components</li>
					<li>Organization/cultural issues when using microservices</li>
					<li>Managing the diversity resulting from microservices</li>
				</ul>
			</slide>
			<slide id="presentation-design">
				<title>API Design</title>
				<ul>
					<li>APIs should <em>connect</em> and <em>isolate</em> at the same time</li>
					<li>API design has short term benefits and long term risks</li>
					<li>Achieving loose coupling is largely a function of API design</li>
				</ul>
			</slide>
			<slide id="presentation-management">
				<title>API Management</title>
				<ul>
					<li>Managing APIs means managing <em>information logistics</em></li>
					<li>Balancing agility and robustness requires a flexible foundation</li>
					<li>Managing APIs means managing and enabling change and reconfiguration</li>
				</ul>
			</slide>
			<slide id="presentation-security">
				<title>API Security</title>
				<ul>
					<li>Traditional security often is built on securing integrated environments</li>
					<li>Securing ecosystems takes a more decentralized view of security</li>
					<li>Web security provides good blueprints for how to decentralize security</li>
				</ul>
			</slide>
			<slide id="presentation-evolution">
				<title>API Evolution</title>
				<ul>
					<li>APIs change because business units change their value creation</li>
					<li>Designing for change is necessary is loosely coupled scenarios</li>
					<li>Decentralized systems have a long history of patterns for loose coupling</li>
				</ul>
			</slide>
			<slide id="presentation-product-management">
				<title>API Product Management</title>
				<ul>
					<li>APIs are an essential part of the value created by business units</li>
					<li>API product management means to elevate APIs to business documents</li>
					<li>Staying on top of APIs means staying on top of visible information</li>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.jpg" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Slides online: <a href="http://dret.net/lectures/fidelity-2016/introduction"><code>dret.net/lectures/fidelity-2016/introduction</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/fidelity-2016"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="design">
		<title>Introduction to API Design</title>
		<toc class="abstract">...</toc>
		<toc class="resources"><a href="http://shop.oreilly.com/product/9780596801694.do" title="Subbu Allamaraju, 'RESTful Web Services Cookbook', O'Reilly Media, February 2010">RESTful Cookbook</a>&#160;· <a href="http://shop.oreilly.com/product/0636920028468.do" title="Leonard Richardson, Mike Amundsen, and Sam Ruby, 'RESTful Web APIs', O'Reilly Media, September 2013">RESTful APIs</a></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="design-advanced">
		<title>API Design Advanced Topics</title>
		<toc class="abstract">...</toc>
		<toc class="resources"></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="management">
		<title>API Management</title>
		<toc class="abstract">...</toc>
		<toc class="resources"></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="evolution">
		<title>API Evolution</title>
		<toc class="abstract">...</toc>
		<toc class="resources"></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="security">
		<title>API Security</title>
		<toc class="abstract">APIs are the visible and accessible surface of an organization's IT. This presentation presents different types of attacks, an introduction to security fundamentals and technologies, and how these apply to APIs.</toc>
		<toc class="resources"></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="security-101">
			<title>Security 101</title>
			<slide>
				<title>Cryptography</title>
				<ul>
					<li>Cryptography is structured into different layers</li>
					<ul>
						<li>Layering is a well-established principle for <em>separation of concerns</em></li>
					</ul>
					<li><em>Cryptographic primitives</em> implement basic functionality</li>
					<ul>
						<li>Changes and advancements in this area are limited to specialized researchers</li>
						<li>It is easy to make fatal mistakes which then challenge everything built on top if it</li>
					</ul>
					<li><em>Cryptographic protocols</em> assemble primitives into application-level solutions</li>
					<ul>
						<li><em>Primitives</em> solve basic security problems (fingerprints, encryption, …)</li>
						<li><em>Protocols</em> combine these into applications (digital signatures, secure communications, …)</li>
					</ul>
				</ul>
			</slide>
			<slide id="one-way-function">
				<title>One-Way Function</title>
				<img style="width : 70% ; margin : 2% ; " src="hash.gif" title="Hash"/>
				<ul>
					<li>Hashes (or <em>message digests</em>) are well-known in computer science</li>
					<li>One-way functions are cryptographically safe hashes</li>
					<ul>
						<li>Very hard to find an input producing a given output</li>
						<li>Very hard to find two inputs producing the same output (<q>collision</q>)</li>
					</ul>
				</ul>
			</slide>
			<part id="secret-key">
				<title>Secret-Key Cryptography</title>
				<slide>
					<title>Plausible Encryption</title>
					<ul>
						<li>Secret-Key is was most people think of when thinking of encryption</li>
						<ul>
							<li><em>Symmetric cryptography</em> is another popular term</li>
						</ul>
						<li>One key for encryption and decryption</li>
						<li>Revealing the key makes encrypted data openly readable</li>
						<ul>
							<li>There must be a secure channel to transport keys, such as <a href="http://en.wikipedia.org/wiki/Diplomatic_bag">diplomatic pouches</a>.</li>
						</ul>
						<li>Good for long-term relationships with few partners</li>
						<ul>
							<li>Exchange secret keys as part of the initial setup of a relationships</li>
							<li>Adding partners requires a <em>secure channel</em> for key exchange</li>
							<li>Changing keys requires a <em>secure channel</em> for key exchange</li>
						</ul>
						<li>Almost impractical in an environment with many ad-hoc partners</li>
					</ul>
				</slide>
				<slide>
					<title>Notice the Arrow</title>
					<img style="width : 90% ; margin : 2% ; " src="secret-key.gif" title="Secret-Key Cryptography"/>
				</slide>
			</part>
			<part id="public-key">
				<title>Public-Key Cryptography</title>
				<slide>
					<title>Implausible Encryption</title>
					<ul>
						<li>Public-Key intuitively is hard to accept as a concept</li>
						<ul>
							<li><em>Asymmetric cryptography</em> is another popular term</li>
						</ul>
						<li>Key pairs of one public and one secret key</li>
						<ul>
							<li><em>Key generation</em> is the process of generating these key pairs</li>
						</ul>
						<li>The public key can be made available to the public</li>
						<ul>
							<li>Only the secret key can do the inverse operation of the public key</li>
						</ul>
						<li>Good for short-term relationships with many partners</li>
						<ul>
							<li>Publish your public key so that it can be used worldwide</li>
							<li>Everybody can encrypt data using the public key</li>
							<li>Only the owner of the secret can decrypt the message and read it</li>
						</ul>
						<li>Computationally expensive and not good for a large amounts of data</li>
					</ul>
				</slide>
				<slide>
					<title>No Arrow Here …</title>
					<img style="width : 90% ; margin : 2% ; " src="public-key-secret-encrypt.gif" title="Public-Key Cryptography (Encrypting with Secret Key)"/>
				</slide>
			</part>
			<part id="crypto-protocols">
				<title>Cryptographic Protocols</title>
				<slide>
					<title>Building Secure Applications</title>
					<ul>
						<li><em>Cryptographic primitives</em> in most cases are not sufficient</li>
						<ul>
							<li>They provide basic functionality for fundamental tasks</li>
							<li>They must by combined to provide solutions for real-world problems</li>
						</ul>
						<li>Typical problem #1: How to ensure key authenticity?</li>
						<ul>
							<li>With insecure keys, the majority of cryptographic methods is worthless</li>
						</ul>
						<li>Typical problem #2: How to communicate securely without shared keys?</li>
						<ul>
							<li>Many interesting scenarios are based on ad-hoc interactions</li>
							<li>Secret-key does not work, public-key needs to verify the peer</li>
						</ul>
						<li>Typical problem #3: How to check authenticity and integrity of data?</li>
						<ul>
							<li>Integrity can be done with checksums, but these could be forged</li>
							<li>Authenticity needs a cryptographically secure way of combining identity and data</li>
						</ul>
					</ul>
				</slide>
				<slide id="certificates">
					<title>Certificates</title>
					<ul>
						<li>Certificates are digital signatures issued by a trusted party</li>
						<ul>
							<li>Most digital signatures are created with certified public keys</li>
							<li>This means the digital signature is created based on a digitally signed key</li>
						</ul>
						<li>Who can you trust on the Web?</li>
						<ul>
							<li>Trust can only start to grow based on initial trust</li>
							<li>Many systems come with <em>pre-installed trust</em> (<em>root certificates</em>)</li>
							<li>Certificates from other issuers will cause security exceptions</li>
						</ul>
						<li>Certificates (like domain names) are an easy way to make money</li>
						<ul>
							<li>In theory there are different levels of certificates with different levels of identity checking</li>
							<li>In practice most sites choose the cheapest one that does not give an error message</li>
						</ul>
					</ul>
				</slide>
			</part>
		</part>
	</presentation>
</hotspot>