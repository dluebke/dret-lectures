<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="catalyst-new" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="sopra.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="https://creativecommons.org/licenses/by/4.0/" short="CC BY 4.0">
		<div class="license">
			<p><a rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/catalyst-new/catalyst/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/">This work is licensed under a CC<br/>Attribution 4.0 International License</a></p>
		</div>
	</license>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Date</th>
					<th valign="bottom">Subject</th>
					<th valign="bottom">Slides</th>
					<th valign="bottom">Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td valign="top"><hotspot:date/></td>
						<td valign="top"><b><span class="title"><hotspot:title/></span></b></td>
						<td align="center"><hotspot:presentation-link title="Presentation Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<title>Sopra Steria Workshops</title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
	<affiliation><a href="https://www.axway.com/">Axway</a> <a href="https://www.axway.com/catalysts">Catalysts</a></affiliation>
	<date short="2020">2020</date>
	<copyright>2020 Erik Wilde</copyright>
	<presentation id="strategy">
		<title short="Strategy &amp; Signals">Strategy &amp; Signals: Scaling API Initiatives</title>
		<toc class="resources"><a href="https://www.apiscene.io/product/api-first-the-essence-of-digital-transformation/" title='Erik Wilde, "API First: The Essence of Digital Transformation", API Scene, June 2019'>API First</a>&#160;Â· <a href="https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/how-to-restart-your-stalled-digital-transformation" title='"How to restart your stalled digital transformation", McKinsey Digital, March 2020'>Stalled Digital Transformation</a></toc>
		<date short="2020-07-01">July 1, 2020</date>
		<part id="intro">
			<title>Introduction</title>
			<slide id="dret">
				<title>Erik Wilde <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></title>
				<img href="https://www.youtube.com/watch?v=kwrrI3EHpGY" title='Erik Wilde, "From API Craftsmanship to API Landscaping", keynote at Nordic APIs 2018 Platform Summit, Stockholm, Sweden, 10/23/2018' src="nordic-dret.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="catalysts">
				<title><a href="https://www.axway.com/">Axway</a> <a href="https://www.axway.com/catalysts">Catalysts</a></title>
				<img src="catalysts-logo.png" title="Catalysts Logo" style="float: right ; width : 16% ; margin : 3% ; "/>
				<ul>
					<li>Small team of experts in the digital transformation and API space</li>
					<ul>
						<li>Help customers to make good decisions on their API journey</li>
						<li>Move the community of API practitioners and their practices forward</li>
					</ul>
					<li>Team members are distributed globally</li>
					<ul style=" columns : 2 ; ">
						<li>Uli Hitzel: <a href="http://twitter.com/u1i" class="twitter-follow-button" title="Uli Hitzel on Twitter: @u1i"><code>@u1i</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Eric Horesnyi: <a href="http://twitter.com/EricHoresnyi" class="twitter-follow-button" title="Eric Horesnyi on Twitter: @EricHoresnyi"><code>@EricHoresnyi</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Kay Lummitsch: <a href="http://twitter.com/lummitsch" class="twitter-follow-button" title="Kay Lummitsch on Twitter: @lummitsch"><code>@lummitsch</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Emmanuel Methivier: <a href="http://twitter.com/e_methivier" class="twitter-follow-button" title="Emmanuel Methivier on Twitter: @e_methivier"><code>@e_methivier</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Brian Otten: <a href="http://twitter.com/bottencatalyst" class="twitter-follow-button" title="Brian Otten on Twitter: @bottencatalyst"><code>@bottencatalyst</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Brian Pagano: <a href="http://twitter.com/brianpagano" class="twitter-follow-button" title="Brian Pagano on Twitter: @brianpagano"><code>@brianpagano</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Eyal Sivan: <a href="http://twitter.com/mropenbanking" class="twitter-follow-button" title="Eyal Sivan on Twitter: @mropenbanking"><code>@mropenbanking</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li>Erik Wilde: <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="journey">
			<title>API Journeys: Ideal vs. Real</title>
			<part id="bezos-mandate">
				<title>The Bezos Mandate</title>
				<slide id="amazon-rules">
					<title>Jeff Bezos' Services Rant: <a href="https://gist.github.com/chitchcock/1281611">The Rules</a></title>
					<ul>
						<li>Famous small set of SOA design rules</li>
						<ul>
							<li>Teams must expose functionality through services</li>
							<li>Communication happens only through service interfaces</li>
							<li>There are no hard guidelines for service design</li>
							<li>Internal/external service is a matter of policy, not one of design</li>
						</ul>
						<li>Going against the <q>let's pick a platform</q> spirit of old-school SOA</li>
					</ul>
				</slide>
				<slide id="amazon-consequences">
					<title>Jeff Bezos' Services Rant: <a href="https://gist.github.com/chitchcock/1281611">The Consequences</a></title>
					<ul>
						<li>With more freedom comes more responsibility</li>
						<ul>
							<li>Monitoring and metrics are necessary for finding root causes</li>
							<li>All APIs must be hardened against DoS attacks</li>
							<li>Automated QA is necessary to really understand service health</li>
							<li>Services must be documented and registered so that they can be discovered</li>
							<li>Debugging becomes harder because of service dependencies</li>
						</ul>
						<li>Sophisticated tooling required to manage the new SOA landscape</li>
						<li>Much easier in today's technology landscape than in 2002</li>
					</ul>
				</slide>
				<slide id="api-first">
					<title><a href="https://www.apiscene.io/product/api-first-the-essence-of-digital-transformation/" title='Erik Wilde, "API First: The Essence of Digital Transformation", API Scene, June 2019'>API First</a>: Everything is an API</title>
					<ul>
						<li><link href="amazon-rules">Jeff Bezos' Mandate</link> focuses on <q>API products</q></li>
						<ul>
							<li>Loose coupling means to look at <em>products as APIs</em></li>
							<li>All dependencies have to be designed and built as APIs</li>
						</ul>
						<li>API products are built by thinking about interactions</li>
						<ol>
							<li>The API is the <em>first UI</em></li>
							<li>APIs are designed before anything is implemented</li>
							<li>APIs are the primary means of team communications</li>
						</ol>
					</ul>
				</slide>
			</part>
			<part id="scaling">
				<title>Scaling the API Practice</title>
				<slide id="journey">
					<title>A Typical API Journey</title>
					<ol>
						<li>Trying to increase speed by decreasing coupling: Initial APIs</li>
						<li>Increasing number of APIs and increasing use of 3<sup>rd</sup> party APIs</li>
						<li>Fear and loathing because optimizing decentralized landscapes works differently</li>
						<li>Programs emerge that help teams and introduce governance structures</li>
						<li>Strategies are defined that set goals and allow to measure success</li>
					</ol>
				</slide>
				<slide id="api-products">
					<title>Getting Started with APIs</title>
					<img src="api-products.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-usage">
					<title>Growing API Usage</title>
					<img src="api-usage.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-platform">
					<title>Products and Platforms</title>
					<img src="api-platform.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-program">
					<title>Programs Drive Platforms</title>
					<img src="api-program.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-strategy">
					<title>Programs Execute Strategies</title>
					<img src="api-strategy.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="stalling">
					<title>Getting started is hard, scaling up is even harder</title>
					<img href="https://www.mckinsey.com/business-functions/mckinsey-digital/our-insights/how-to-restart-your-stalled-digital-transformation" title='"How to restart your stalled digital transformation", McKinsey Digital, March 2020' src="stalled-digital-transformation.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
		</part>
		<part id="strategy">
			<title>Strategy: Tell Me Why!</title>
			<slide id="the-right-thing">
				<title>Effectiveness > Efficiency</title>
				<ul>
					<li>Effectiveness: <q>Doing the right thing.</q></li>
					<ul>
						<li><q>Strategy:</q> Having a vision and a high-level plan how to get there</li>
						<li><q>Program:</q> Turning the strategy into reality by executing a program</li>
					</ul>
					<li>Efficiency: <q>Doing the thing right.</q></li>
					<ul>
						<li><q>Platform:</q> Providing the foundation for everybody to build on</li>
						<li><q>Product:</q> Adding valuable pieces to the platform</li>
						<li><q>Consumption:</q> Ecosystems need different behavior to work well</li>
					</ul>
				</ul>
			</slide>
			<part id="theory">
				<title>One Theory</title>
				<slide id="nature-of-the-firm">
					<title>Transaction Costs Define Business</title>
					<blockquote><q>A firm is likely therefore to emerge in those cases where a very short term contract would be unsatisfactory. It is obviously of more importance in the case of services than it is in the case of the buying of commodities.<br/>
						[â¦] the operation of a market costs something and by forming an organisation and allowing some authority (an <q>entrepreneur</q>) to direct the resources, certain marketing costs are saved.</q></blockquote>
					<p class="quotenote"><a href="https://onlinelibrary.wiley.com/doi/full/10.1111/j.1468-0335.1937.tb00002.x">R. H. Coase, <q>The Nature of the Firm</q>, Economica 4(16):386-405, November 1937</a></p>
				</slide>
				<slide id="enterprise-architecture">
					<title>Aligning Business and IT</title>
					<img src="architecture-api-strategy.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="perspectives">
				<title>Two Perspectives</title>
				<slide id="api-internal-external">
					<title>Internal and External API Usage</title>
					<img title="Internal and External API Usage" src="api-internal-external.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="external">
					<title>#1: APIs as External Interfaces</title>
					<ul>
						<li>Direct API monetization</li>
						<li>API foundation for user journeys (omni-channel)</li>
						<li>Value chain optimization (outsourced APIs)</li>
					</ul>
				</slide>
				<slide id="internal">
					<title>#2: APIs as Internal Componentization</title>
					<ul>
						<li>Moving from integration to interconnection (IT modernization)</li>
						<li>Decoupling products and their development cycles and speed</li>
						<li>Improving capability reuse across the whole organization</li>
					</ul>
				</slide>
			</part>
			<part id="pillars">
				<title>Three Pillars</title>
				<slide id="biz">
					<title>Business Pillar</title>
					<ul>
						<li>Increase delivery speed of capabilities and products</li>
						<li>Decrease cost of product development and adaptation</li>
						<li>Improve insight into products and value chains</li>
						<li>Aligning/unifying business and IT: <em><q>Business, rewritten by software</q></em>â¢</li>
					</ul>
				</slide>
				<slide id="org">
					<title>Organizational Pillar</title>
					<ul>
						<li>Increased team autonomy increases team delivery speed</li>
						<li>Structures across teams build communities of practice</li>
						<li>API support and platform provided by <em>Center for Enablement (C4E)</em></li>
						<li>Team practices inform and form the API guidelines</li>
					</ul>
					<blockquote><q href="http://www.melconway.com/Home/Conways_Law.html">Any organization that designs a system will produce a design whose structure is a copy of the organization's communication structure.</q> (<a href="https://en.wikipedia.org/wiki/Melvin_Conway">Mel Conway</a>)</blockquote>
				</slide>
				<slide id="tech">
					<title>Technology Pillar</title>
					<ul>
						<li>Constrain <em>what</em> products have to do (not <em>how</em>)</li>
						<li>No hidden channels bypassing the API strategy</li>
						<li>API guidelines for protocols, patterns, and practices</li>
						<li>Lifecycle for technology maturity and support</li>
					</ul>
				</slide>
				<slide id="strategy-matrix">
					<title>API Strategy = Pillars Ã Perspectives</title>
					<table style="border-collapse: collapse ; ">
						<tr>
							<td/>
							<th style="border: 1px solid black ; padding: 0.5em">External</th>
							<th style="border: 1px solid black ; padding: 0.5em">Internal</th>
						</tr>
						<tr>
							<th style="border: 1px solid black ; padding: 0.5em">Biz</th>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">API monetization</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Revenue-supporting APIs</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Increase speed &amp; feedback</li>
							</ul></td>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Identify &amp; stabilize enablers</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Design for externalization</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Increase biz insight with dashboards</li>
							</ul></td>
						</tr>
						<tr>
							<th style="border: 1px solid black ; padding: 0.5em">Org</th>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Focus on documentation/DX</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Support discovery/self-service</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Collect DX feedback</li>
							</ul></td>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Products &gt; projects (ownership)</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Team enablement/support</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Loose coupling for speed/agility</li>
							</ul></td>
						</tr>
						<tr>
							<th style="border: 1px solid black ; padding: 0.5em">Tech</th>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Tech trends and popularity</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Invest in on-boarding support</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Secure through platform</li>
							</ul></td>
							<td style="border: 1px solid black ; padding: 0.5em"><ul>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Loosely coupled implementations</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Observe patterns and practices</li>
								<li style="margin: 0 ; padding : 0 ; line-height: 100%">Establish C4E for platform/support</li>
							</ul></td>
						</tr>
					</table>
				</slide>
				<slide id="one-size">
					<title>Got Strategy?</title>
					<img title="API Cookie Cutter" src="api-cookie-cutter.png" href="https://www.openapis.org/" style="float : right ; width : 25% ; margin-top : 0.5em ; margin-right : 2em ; "/>
					<ul>
						<li>There is no one-size-fits-all API Strategy</li>
						<li>Strategy always depends on context</li>
						<ul>
							<li>What do you want to improve/achieve with APIs?</li>
							<li>What does your organization look like?</li>
							<li>What is the main value that you produce?</li>
							<li>What does the market look like?</li>
							<li>What do your customers look like?</li>
							<li>What does your competition look like?</li>
						</ul>
					</ul>
				</slide>
			</part>
		</part>
		<part id="magical-api">
			<title>Signals: API are Magical!</title>
			<slide id="api-hype-curve">
				<title>Watch out for Disappointment</title>
				<img src="hype-curve-unicorn.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="monolith-2001">
				<title>Miracle #1: Untangling Monoliths!</title>
				<img src="monolith-2001.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="monolith-but-maybe">
				<title>#1: Untangling Monoliths! But Maybe â¦</title>
				<ul>
					<li>IT modularization has been around for decades</li>
					<li>Organizational modularization has been around for millennia</li>
					<li>What's worse than a monolith? A distributed monolith!</li>
				</ul>
			</slide>
			<slide id="scaling">
				<title>Miracle #2: Scaling Up!</title>
				<img src="pneumatic-tubes.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="scaling-but-maybe">
				<title>#2: Scaling Up! But Maybe â¦</title>
				<ul>
					<li>Scaling depends on loosely coupled architecture</li>
					<li>Scaling is a function of interface and implementation</li>
					<li>Scaling needs to be aligned with business processes</li>
				</ul>
			</slide>
			<slide id="api-money-press">
				<title>Miracle #3: Monetization!</title>
				<img src="money-press.gif" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="monetization-but-maybe">
				<title>#3: Monetization! But Maybe â¦</title>
				<ul>
					<li>Product success is a function of product value (not of product delivery)</li>
					<li>Most organizations should focus on value creation over monetization</li>
					<li>Enrich value chains with new value chain inputs</li>
					<li>Increase value chain coverage with new value chain outputs</li>
				</ul>
			</slide>
			<slide id="tower-of-babel">
				<title>Miracle #4: Organizational Issues!</title>
				<img src="tower-of-babel.jpg" href="https://en.wikipedia.org/wiki/File:Pieter_Bruegel_the_Elder_-_The_Tower_of_Babel_(Vienna)_-_Google_Art_Project_-_edited.jpg" title="Pieter Bruegel the Elder: The Tower of Babel (1563)" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="communications-but-maybe">
				<title>#4: Organizational Issues! But Maybe â¦</title>
				<ul>
					<li>Shared understanding is more than having a shared grammar/language</li>
					<li>Communication design is mostly a question of organization design</li>
				</ul>
			</slide>
			<slide id="services-graph">
				<title>Miracle #5: Domain Complexity!</title>
				<img src="services-graph.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="domain-but-maybe">
				<title>#5: Domain Complexity! But Maybe â¦</title>
				<ul>
					<li>Domain complexity never disappears and can only be pushed around</li>
					<li>There is no way escaping <a href="http://melconway.com/Home/Conways_Law.html">Conway's Law</a></li>
				</ul>
			</slide>
		</part>
		<part id="strategy-conclusions">
			<title>Conclusions</title>
			<slide id="strategy-conclusions">
				<title>Doing the Right Thing</title>
				<ul>
					<li>Look out for signals for strategic issues</li>
					<li>Never stop asking <q>why?</q></li>
					<li>Make sure that strategy covers all the necessary areas</li>
				</ul>
			</slide>
			<slide id="q-and-a">
				<title>Thank You!</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 0% 5% 5% 5% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/sopra-2020/strategy"><code>dret.net/lectures/sopra-2020/strategy</code></a></li>
					<li>More information:</li>
					<ul>
						<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
						<li>YouTube: <a href="https://www.youtube.com/ErikWilde"><code>youtube.com/ErikWilde</code></a></li>
						<li>LinkedIn: <a href="http://www.linkedin.com/in/netdret"><code>linkedin.com/in/netdret</code></a></li>
						<li>Web: <a href="http://dret.net/netdret/"><code>dret.net/netdret/</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="products">
		<title short="Products">Products: API Product Management and Design</title>
		<toc class="resources"><a href="https://api-navigator.github.io/overview/product/">API Product Navigator</a>&#160;Â· <a href="http://dret.net/netdret/publications#pau09a" title='Cesare Pautasso and Erik Wilde, "Why is the Web Loosely Coupled? A Multi-Faceted Metric for Service Design", 18th International World Wide Web Conference (WWW2009), Madrid, Spain, April 2009'>Loose Coupling</a></toc>
		<date short="2020-07-03">July 3, 2020</date>
		<slide id="services-cycle">
			<title>Assessment, Enablement, Coaching</title>
			<img src="services-cycle.png" style="float: right ; width : 30% ; margin : 0% 5% 5% 5% ; "/>
			<ul>
				<li><em>Assessment:</em> Where do we are and are we covering all the bases</li>
				<li><em>Enablement:</em> We need additional perspectives and skills</li>
				<li><em>Coaching:</em> Cruising along until the next assessment</li>
			</ul>
		</slide>
		<part id="product-navigator">
			<title>API Product Navigator</title>
			<slide id="pillar-maturity">
				<title>Product Pillars and Maturity</title>
				<ul>
					<li><em>API Products</em> are created in the context of (possibly implicit) API landscapes</li>
					<ul>
						<li>They are influenced by the culture and constraints of the landscape</li>
					</ul>
					<li><em>Product Pillars</em> identify areas of investment during an API's lifetime</li>
					<li><em>Product Maturity</em> describes stages of an API product's lifetime</li>
				</ul>
			</slide>
			<slide id="product-pillars">
				<title>API Product Navigator: Pillars</title>
				<img src="navigator-product.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="=maturity">
				<title>API Product Navigator: Maturity</title>
				<img src="navigator-maturity.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="change-management">
				<title>API Product Navigator: Change Management</title>
				<ul>
					<li>Does your design include a plan how to make any changes to the API?</li>
					<li>Do you have an idea of what your API should and shouldn't be, so that you can more easily decide which evolution paths you are trying to keep open?</li>
					<li>If your design does not plan on evolving the API itself, do you have a plan how to operate multiple versions and how to manage the consumers of these multiple versions?</li>
					<li>If your design includes a plan for evolving the API itself, do you document this clearly so that clients know what to expect?</li>
					<li>Does your documentation include a history of changes so that it is possible for consumers to understand how the API evolved?</li>
					<li>Do you have a plan how to decommission the API, and how this will be communicated to active consumers?</li>
				</ul>
			</slide>
			<slide id="deployment">
				<title>API Product Navigator: Deployment</title>
				<ul>
					<li>Deployment automation for the API product is done in line with the strategic goals, so that deployments can be rolled out fast enough.</li>
					<li>Deployment is aligned with the change management principles, so that if necessary, multiple versions can be operated and potentially discovered in parallel.</li>
					<li>Deployment decisions are structured in a way so that given the constraints of when to release and who gets to decide, deployment can happen as fast as possible.</li>
					<li>Deployment scalability has been taken into account, so that scaling the product up when required is supported by the deployment packaging model and by the deployment environment.</li>
				</ul>
			</slide>
			<slide id="design">
				<title>API Product Navigator: Design</title>
				<ul>
					<li>Have you identified (based on the API product strategy) who the API is designed for, and included that perspective in the design process?</li>
					<li>Given the API's strategy, is the design balancing the needs and optimization potential for the individual API product with those for the API landscape?</li>
					<li>Given the API's style and technology, is it using a recommended and/or standardized description format that makes it easier for consumers to gain an initial understanding of the API, possibly aided by tooling they can use?</li>
				</ul>
			</slide>
			<slide id="development">
				<title>API Product Navigator: Development</title>
				<ul>
					<li>Are design and development coordinated so that any changes in the API design (the interface description) can be easily reflected and implemented in the development process?</li>
					<li>Does development include technologies and/or tools that are not part of the recommended development technologies and/or tools in the organization?</li>
				</ul>
			</slide>
			<slide id="discovery">
				<title>API Product Navigator: Discovery</title>
				<ul>
					<li>Given the strategic goals of the API product, marketing is targeting the appropriate channels to make sure that potential users can easily discover the API.</li>
					<li>Based on the available documentation and the strategic goals, the discovery experience takes into account the best way how potential new users can understand the API product once they discover it.</li>
					<li>Based on the change management strategy, it is made sure that it is always the most recent version that is made available through all discovery channels.</li>
				</ul>
			</slide>
			<slide id="documentation">
				<title>API Product Navigator: Documentation</title>
				<ul>
					<li>Is the documentation and learning experience for the API based on the strategic goals of the API product?</li>
					<li>Is documentation for the API integrated into the API landscape as much possible, given the strategic goals of the API product?</li>
					<li>Does the API product provide its documentation assets in reusable ways, so that they cab be integrated into other documentation services (such as a portal) as needed?</li>
					<li>Is documentation produced and published so that it is easy to identify the API product version the documentation is for?</li>
				</ul>
			</slide>
			<slide id="monitoring">
				<title>API Product Navigator: Monitoring</title>
				<ul>
					<li>Given the strategic goals, do the monitoring capabilities include all the information that is needed to evaluate the API product's health and success?</li>
					<li>Is all the monitoring information collected in a way that it can be easily accessed and reused?</li>
					<li>All of the data monitored has undergone security considerations, and for any PII data in particular, it is made sure that all security and privacy considerations are applied to monitoring tooling and services as well.</li>
				</ul>
			</slide>
			<slide id="security">
				<title>API Product Navigator: Security</title>
				<ul>
					<li>The API product controls basic technical security issues (identities, authenticate clients and end users, authorize usage, and implement rate limits, ...) either itself or by using libraries or tooling.</li>
					<li>Documentation and design expose as little information about implementation details as possible to reduce the attack surface.</li>
					<li>Data management by the API product has been reviewed and verified to comply with the applicable regulations.</li>
					<li>The API supports necessary support functions to comply with known regulations (such as GDPR) around security and privacy.</li>
					<li>Security considerations are part of the deployment considerations, so that for example geographic locations are taken into account.</li>
				</ul>
			</slide>
			<slide id="strategy">
				<title>API Product Navigator: Strategy</title>
				<ul>
					<li>Do you have a clearly defined and documented reason why the API exists?</li>
					<li>Are there clearly defined criteria and indicators (such as OKR or KPI) that allow you to say whether the strategic goal has been reached or not?</li>
					<li>Do you have plans for how to balance investment in product pillars based on the strategy and goals (i.e., to implement your strategy and reach your goals)?</li>
					<li>Is there a plan for when and how the strategy or investment can be adjusted if the indicators or other information indicate that such a change is advisable?</li>
				</ul>
			</slide>
			<slide id="testing">
				<title>API Product Navigator: Testing</title>
				<ul>
					<li>Is testing using as much existing tooling as possible?</li>
					<li>Are there metrics in place to evaluate and observe the coverage of tests?</li>
					<li>Do your tests include scenarios where consumed APIs are not performing or are not reachable, in order to test for resiliency of the API product?</li>
				</ul>
			</slide>
			<slide id="navigator-apis">
				<title>API Product Navigator: Results</title>
				<img src="navigator-apis.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="styles">
			<title>API Styles</title>
			<slide id="api-language">
				<title>APIs are Languages</title>
				<ul>
					<li>APIs are part of distributed problem solving</li>
					<li>Ideal APIs can be used for a range of problems</li>
					<li>Problem-solving often requires combining APIs</li>
					<li><q>Language families</q> make it easier to learn and use new APIs</li>
				</ul>
			</slide>
			<slide id="api-conversation">
				<title>APIs Interactions are Conversations</title>
				<ul>
					<li>APIs support conversations between interacting peers</li>
					<ul>
						<li>Some conversations are point-to-point (how to find the peer?)</li>
						<li>Some conversations are point-to-multipoint (how are groups managed?)</li>
						<li>Some conversations are point-to-ether (what does the ether do?)</li>
					</ul>
					<li>API technology does not determine the API conversation style</li>
					<ul>
						<li>HTTP can be used for asynchronous conversations (<q href="http://www.webhooks.org/">WebHooks</q> pattern)</li>
						<li>Synchronous conversations can be layered on top of asynchronous foundations</li>
					</ul>
					<li>Conversation goals should determine the conversation style</li>
				</ul>
			</slide>
			<slide id="style-metaphors">
				<title>API Style Metaphors</title>
				<ul>
					<li><link href="tunnel-style"/>: Function calls in procedural programming</li>
					<li><link href="uri-style"/>: Data access objects</li>
					<li><link href="hypermedia-style"/>: Browsing the Web</li>
					<li><link href="query-style"/>: Databases and database queries</li>
					<li><link href="event-style"/>: Event-based programming</li>
				</ul>
			</slide>
			<part id="tunnel-style">
				<title>Tunnel Style</title>
				<slide id="tunnel-style-image">
					<title>One Tunnel to Call them All</title>
					<img title="Tunnel Style" src="api-styles-tunnel.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="rpc-over-http">
					<title>Distributed Programming</title>
					<ul>
						<li>Rooted in <em>Remote Procedure Call (RPC)</em> patterns</li>
						<li>Functions are the main abstraction and invoked at known <em>endpoints</em></li>
						<li>Resource identifiers typically are context-dependent</li>
						<li>Suffers from the typical RPC problems at bigger scale</li>
						<ul>
							<li>Failure is hard to deal with (function calls always succeed)</li>
							<li>Scoped identifiers result in naming challenges and compromised network effect</li>
						</ul>
						<li>Convenient for developers looking to <q>code like a local program</q></li>
					</ul>
				</slide>
			</part>
			<part id="uri-style">
				<title>URI Style</title>
				<slide id="uri-style-image">
					<title>Listing All Resources</title>
					<img title="URI Style" src="api-styles-uri.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="webby-identifiers">
					<title>Identifiers for Resources</title>
					<ul>
						<li>Makes a major step towards a more webby service design</li>
						<ul>
							<li>Resources are identified by URIs and thus globally unique</li>
							<li>Data context may be established by using URI identifiers for resources</li>
							<li>Navigational context is missing because of a lack of links</li>
						</ul>
						<li>One necessary step in the evolution of designing decentralized systems</li>
						<ul>
							<li><em>Web of Data</em> is a good starting point</li>
							<li><em>Web of Services</em> is what makes the Web what it is</li>
						</ul>
						<li>Developers are tempted/required to hardcode control flows</li>
						<ul>
							<li>No navigational guidance provided by the API</li>
							<li>Guidance must be hand-crafted or clients are forced to do trial-and-error</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="hypermedia-style">
				<title>Hypermedia Style</title>
				<slide id="hypermedia-style-image">
					<title>Linking All Resources</title>
					<img title="Hypermedia Style" src="api-styles-hypermedia.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="webby-style">
					<title>Webby APIs</title>
					<ul>
						<li>Based on mixing data and controls in representations</li>
						<ul>
							<li><em>Data</em> represents the current resource state</li>
							<li><em>Controls</em> represent the advertised next options for clients</li>
						</ul>
						<li>Controls allow clients to work across individual APIs</li>
						<ul>
							<li>APIs expose sets of resources and provide links</li>
							<li>Clients follow links without being aware of API boundaries</li>
						</ul>
						<li>Developers must code differently from usual programming flows</li>
						<ul>
							<li>Applications are driven by the responses that client code receives</li>
							<li>Imperative programming is not the best fit for this kind of flow</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="query-style">
				<title>Query Style</title>
				<slide id="query-style-image">
					<title>Querying into Server-Side Models</title>
					<img title="Query Style" src="api-styles-query.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="database-style">
					<title>Querying Structured Data</title>
					<ul>
						<li>The API provides access to a rich interconnected data structure</li>
						<ul>
							<li>Clients know the data model and understand how to query it</li>
							<li>Clients want a small subset of the available data</li>
						</ul>
						<li>Querying into structure data needs an agreement on data and querying</li>
						<ul>
							<li>Query-style APIs define a <em>metamodel</em> that all data models must use</li>
							<li>Query-style APIs define a <em>query language</em> for querying data</li>
						</ul>
						<li><em>Loose coupling</em> depends on if and how clients adjust to schema changes</li>
						<ul>
							<li>Is it possible for clients to find out about schema changes?</li>
							<li>Do clients have to worry about schema changes?</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="event-style">
				<title>Event-Based Style</title>
				<slide id="event-style-image">
					<title>Event Publish/Subscribe</title>
					<img title="Event-based Style" src="api-styles-event.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="fire-and-forget">
					<title>Fire and Forget</title>
					<ul>
						<li>Synchronous communications result in tighter coupling between peers</li>
						<li>Asynchronous communications can make data provision easier</li>
						<ul>
							<li>Data is tagged and submitted into some <em>messaging fabric</em></li>
							<li>The fabric takes care of notifying and delivering data to consumers</li>
						</ul>
						<li>The fabric is beyond the <em>smart endpoints and dumb pipes</em> idea</li>
						<ul>
							<li><em>Smart pipes</em> are not bad by itself but often have problems scaling</li>
						</ul>
						<li>Managing the fabric becomes an essential part of making code work</li>
						<ul>
							<li>Who is producing data?</li>
							<li>Who is consuming data?</li>
							<li>What are the ways in which data can or must be tagged?</li>
							<li>How is the namespace of data tagging managed?</li>
						</ul>
					</ul>
				</slide>
				<slide id="event-sourcing">
					<title>Event Sourcing: Durable Event Logs</title>
					<ul>
						<li>Application state is determined by events that have happened</li>
						<ul>
							<li>Application state can be re-created by replaying the sequence of events</li>
							<li>Persisting events becomes essential for representing application state</li>
						</ul>
						<li>Useful pattern for designs where auditing/accounting is a key component</li>
						<ul>
							<li>Application state is determined <em>as a function of the audit trail</em></li>
							<li>Auditing/Accounting by definition is in sync with application state</li>
							<li>Temporal reasoning becomes easier</li>
						</ul>
						<li><q>Isolation</q> from external events (input/output) becomes essential</li>
						<ul>
							<li><em>Event replay</em> may be needed to recreate application state</li>
							<li><em>Event replay</em> must be prevented from replaying external effects</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="choosing-style">
				<title>Choosing an API Style</title>
				<slide id="api-style-maslow">
					<title>API Styles are Tools</title>
					<img title="Hammer and Screw" href="https://www.flickr.com/photos/justinbaeder/5317820857" src="maslow-hammer-nail.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-style-properties">
					<title>API Style Properties</title>
					<ul>
						<li>API styles influence important API properties</li>
						<ul>
							<li><em>Scalability:</em> Number of APIs, API teams, API consumers, and API interactions</li>
							<li><em>Usability:</em> Problem domain, established styles, available tooling</li>
							<li><em>Changeability:</em> BFF, known/unknown group of consumers</li>
							<li><em>Performance:</em> What are critical issues in known scenarios</li>
							<li><em>Reliability:</em> Operational concerns and centralization/decentralization</li>
						</ul>
					</ul>
				</slide>
				<slide id="api-style-context">
					<title>Context Considerations</title>
					<ul>
						<li><em>Backend for Frontend (BFF)</em> implies tight coupling producer/consumer</li>
						<ul>
							<li>API style and API design can be coordinated with the consumer</li>
						</ul>
						<li><em>Private APIs</em> implies a smaller group of potential consumers</li>
						<ul>
							<li>Style and design can be guided by internal guidelines/practices</li>
						</ul>
						<li><em>Partner APIs</em> implies a well-known group of consumers</li>
						<ul>
							<li>Broader appeal to consumers necessary</li>
						</ul>
						<li><em>Public APIs</em> is the most loosely coupled group of consumers</li>
						<ul>
							<li>No control over consumers and their preferences/tools and development cycles</li>
						</ul>
					</ul>
				</slide>
				<slide id="style-implementations">
					<title>API Styles in the Wild</title>
					<ul>
						<li><link href="tunnel-style"/>: XML-RPC, SOAP, gRPC, Avro</li>
						<li><link href="uri-style"/>: OpenAPI/Swagger, RAML, API Blueprint</li>
						<li><link href="hypermedia-style"/>: HAL, Siren, Atom, HATEOAS</li>
						<li><link href="query-style"/>: GraphQL, OData, SPARQL</li>
						<li><link href="event-style"/>: MQ, WebSub, MQTT, XMPP, AMQP, Kafka, AsyncAPI</li>
					</ul>
				</slide>
				<slide id="no-style-hammer">
					<title>There is no Style Hammer</title>
					<ul>
						<li>API styles can be combined</li>
						<li>Style coherence makes a API landscape more usable</li>
						<li>Style fundamentalism may pick the wrong tool for a problem</li>
						<li>Be aware of styles and pick the one that works best</li>
					</ul>
				</slide>
			</part>
		</part>
		<part id="products-conclusions">
			<title>Conclusions</title>
			<slide id="q-and-a">
				<title>Thank You!</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 0% 5% 5% 5% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/sopra-2020/products"><code>dret.net/lectures/sopra-2020/products</code></a></li>
					<li>More information:</li>
					<ul>
						<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
						<li>YouTube: <a href="https://www.youtube.com/ErikWilde"><code>youtube.com/ErikWilde</code></a></li>
						<li>LinkedIn: <a href="http://www.linkedin.com/in/netdret"><code>linkedin.com/in/netdret</code></a></li>
						<li>Web: <a href="http://dret.net/netdret/"><code>dret.net/netdret/</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="programs">
		<title short="Programs">Programs: Creating a Productive API Platform</title>
		<date short="2020-07-08">July 8, 2020</date>
		<part id="programs-conclusions">
			<title>Conclusions</title>
			<slide id="programs-conclusions">
				<title></title>
			</slide>
			<slide id="q-and-a">
				<title>Thank You!</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 0% 5% 5% 5% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/sopra-2020/programs"><code>dret.net/lectures/sopra-2020/programs</code></a></li>
					<li>More information:</li>
					<ul>
						<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
						<li>YouTube: <a href="https://www.youtube.com/ErikWilde"><code>youtube.com/ErikWilde</code></a></li>
						<li>LinkedIn: <a href="http://www.linkedin.com/in/netdret"><code>linkedin.com/in/netdret</code></a></li>
						<li>Web: <a href="http://dret.net/netdret/"><code>dret.net/netdret/</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>