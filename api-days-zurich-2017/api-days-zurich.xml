<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="api-days-zurich.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title><a href="http://www.apidays.io/events/zurich-2017">API Days Zürich 2017</a></title>
	<presentation id="index">
		<title>Achieving API Awesomeness</title>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
		<affiliation><a href="http://www.apiacademy.co/">API Academy</a>, <a href="http://www.ca.com/">CA Technologies</a></affiliation>
		<date short="2017-09-26">September 26, 2017</date>
		<copyright>2017 Erik Wilde</copyright>
		<toc class="resources"><a href="http://www.apiacademy.co/">API Academy</a>&#160;· <a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/" title="Mike Amundsen, Matt McLarty, Ronnie Mitra, and Irakli Nadareishvili, 'Microservice Architecture: Aligning Principles, Practices, and Culture', O'Reilly Media, June 2016">MSA Book</a></toc>
		<part id="introduction">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>UC Berkeley (2006-2011), working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>EMC (2011-2014), working on transforming software products into service platforms</li>
					<li>Siemens (2014-2015), working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in 2016 and now all about API Strategy and Design</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="http://dret.typepad.com/dretblog/">my blog</a>, <a href="www.linkedin.com/in/netdret">LinkedIn</a>, and <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a></li>
				</ul>
			</slide>
			<slide id="api-academy">
				<title><a href="http://www.apiacademy.co/">API Academy</a></title>
				<img src="apiacademy-red-black.png" href="http://www.apiacademy.co/" title="API Acacdemy" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver)</li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati)</li>
						<!--<li><a href="http://www.apiacademy.co/team_member/mehdi-medjaoui/">Mehdi Medjaoui</a> (San Francisco)</li>-->
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London)</li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich/Berkeley)</li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Publishing (blogs, articles, books, <a href="https://soundcloud.com/user-426834320">podcasts</a>)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="msa-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">free electronic version courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="awesome-apis">
			<title>Awesome APIs</title>
			<slide id="api-excellence">
				<title>API Excellence</title>
				<img title='Digital McKinsey: "What it really takes to capture the value of APIs" by Keerthi Iyengar, Somesh Khanna, Srinivas Ramadath, and Daniel Stephens; September 2017' href="http://www.mckinsey.com/business-functions/digital-mckinsey/our-insights/what-it-really-takes-to-capture-the-value-of-apis" src="mckinsey-api-coe.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="eaas">
				<title>Excellence as a Service (EaaS)</title>
				<ul>
					<li>What matters for an <em>API Center of Excellence (CoE)</em>?</li>
					<ul>
						<li>Should excellence sit in CoE and be created/managed/delivered from there?</li>
						<li>Should the CoE be a <em>service</em> to enable all teams achieving excellence?</li>
					</ul>
					<li>API landscapes are <em>ecosystems</em> that need <em>cultivation</em></li>
					<ul>
						<li><em>Ecosystems</em> value diversity to improve fitness and adaptivity</li>
						<li><em>Cultivation</em> is a continuous process of feedback and improvement</li>
					</ul>
					<li>Culture evolves over time as a set of shared practices</li>
					<ul>
						<li><em>Culture</em> is a set of shared <em>do</em> and <em>don't</em> rules</li>
					</ul>
				</ul>
			</slide>
			<slide id="api-management">
				<title>Excellent API Management</title>
				<ol>
					<li>Easy to design → <em>Design Scope and Vocabulary</em></li>
					<li>Easy to implement → <em>Useful Components</em></li>
					<li>Easy to discover → <em>Rich Description</em></li>
					<li>Easy to use → <em>Rich Documentation</em></li>
					<li>Easy to control → <em>Connective Fabric Instrumentation</em></li>
					<li>Easy to combine → <em>Coherent Designs</em></li>
					<li>Easy to change → <em>Open Design</em></li>
					<li>Easy to withdraw → <em>Lifecycle Thinking</em></li>
				</ol>
			</slide>
			<slide id="landscape-dx">
				<title>APIs and API Landscapes</title>
				<ul>
					<li><em>Design Patterns</em> make navigating landscapes easier</li>
					<li><em>Design Patterns</em> make designing APIs easier</li>
					<li><em>Design Patterns</em> are continually evolving vocabularies</li>
					<li><em>Design Patterns</em> should reflect product design needs</li>
					<ul>
						<li><em>Why</em> a product should have certain properties/capabilities</li>
						<li><em>What</em> can be done to address these issues</li>
						<li><em>How</em> a product may choose to implement the resolution</li>
					</ul>
				</ul>
			</slide>
			<slide id="webby-amazon">
				<title>Awesome Web Pages are Webby</title>
				<img title="Webby Amazon" src="webby-amazon.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="interface-implementation">
			<title>Interface ≠ Implementation</title>
			<slide id="design-eames">
				<title>Design and Constraints</title>
				<blockquote><q href="http://www.markwunsch.com/eames">Design depends largely on constraints.</q> (<a href="https://en.wikipedia.org/wiki/Charles_and_Ray_Eames">Charles Eames</a>)</blockquote>
			</slide>
			<slide id="api-minimalism">
				<title>API Minimalism</title>
				<ul>
					<li>APIs should be <em>as simple as possible</em></li>
					<li>Do not let <em>the implementation shine through</em></li>
				</ul>
			</slide>
			<slide id="api-language">
				<title>APIs are Languages</title>
			</slide>
		</part>
		<part id="design-culture">
			<title>API Design Culture</title>
			<slide id="api-styles">
				<title>Have Some Style</title>
			</slide>
		</part>
		<part id="api-change-management">
			<title>Example: API Change Management</title>
			<slide id="api-change-strategy">
				<title>API Change Management in API Strategy</title>
				<ul>
					<li>API change management becomes increasingly important</li>
					<ul>
						<li>Microservices optimize for quick design/deployment/development/decommissioning</li>
						<li>Even in MSA-land there are <em>Experience APIs</em> meant to deliver some API stability</li>
					</ul>
					<li>APIs can change in terms of features and will be decommissioned at some point</li>
					<ul>
						<li><a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html">Robust extensibility</a> helps to facilitate non-breaking API changes</li>
						<li><em>Hypermedia</em> helps as a pattern to move extensibility beyond data models</li>
						<li><a href="http://semver.org/">Semantic versioning</a> may be used to keep track of API changes</li>
						<li><a href="http://dret.typepad.com/dretblog/2015/08/http-sunset-header.html">HTTP <code>Sunset</code>ting</a> can be used to <a href="http://webconcepts.info/concepts/http-header/Sunset">signal upcoming sunsets on the HTTP level</a></li>
					</ul>
					<li>Always follow the <em>why/what/how</em> triad for API strategy</li>
					<ul>
						<li><em>Why:</em> Some services/consumers are interested in how an API will change</li>
						<li><em>What:</em> Follow principles/patterns/protocols to manage/expose API changes</li>
						<li><em>How:</em> Support tooling/services to implement and test pattern behavior</li>
					</ul>
				</ul>
			</slide>
			<slide id="sunset-patterns">
				<title>HTTP <code>Sunset</code>: An Even Simpler Example</title>
				<ul>
					<li><em>API Documentation</em> guidelines may ask for change management documentation</li>
					<ul>
						<li>Requirement: Can be as simple as making documentation discoverable on deploy</li>
						<li>Resolution: Can be as simple as stating that there is no change management</li>
					</ul>
					<li><em>Discoverability</em> and <em>machine-readability</em> are different issues</li>
					<ul>
						<li>Making description resources <em>discoverable</em> can be validated during deployment</li>
						<li>Every API entering the landscape must make change management documentation discoverable</li>
						<li>For some classes of APIs/services additional requirements may be put in place</li>
					</ul>
					<li>One possible requirement is that <em>Public APIs</em> must support <code href="http://webconcepts.info/concepts/http-header/Sunset">Sunset</code></li>
					<ul>
						<li>Services must document/describe the support of <code>Sunset</code></li>
						<li>Services may implement <code>Sunset</code> any way they like</li>
						<li>The simplest option may be <em><code>Sunset</code> policies</em> on a gateway</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="devops-apis">
				<title>DevOps Your APIs!</title>
			</slide>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/api-days-zurich-2017"><code>dret.net/lectures/api-days-zurich-2017</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/api-days-zurich-2017"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>