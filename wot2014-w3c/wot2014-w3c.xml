<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="siemens" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="wot2014-w3c.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/ischool/ischool/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title><a href="http://www.w3.org/">W3C</a> <a href="http://www.w3.org/2014/02/wot/">Workshop on the Web of Things</a></title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a>, Florian Michahelles, and Stefan Lüder</author>
	<affiliation><a href="http://www.siemens.com/">Siemens</a></affiliation>
	<date short="2014-06-26">June 26, 2014</date>
	<copyright>2014 Erik Wilde, Florian Michahelles, and Stefan Lüder</copyright>
	<presentation id="index">
		<title>Leveraging the Web Platform for the Web of Things</title>
		<slide>
			<title>Abstract</title>
			<p class="abstract">Web Architecture provides a general-purpose way of establishing an interlinked network of resources, which are interacted with through the exchange of representations of their state. We argue that the <em>Web of Things</em> fits well into this general framework, and thus should be built firmly on the foundation provided by Web Architecture. We also argue that in order to allow an evolutionary path towards a <em>Web of Things</em>, it is important to take small and incremental steps towards the final goal, instead of trying to establish a grand <q>Web of Things Architecture</q> in one monolithic step. One interesting first step could be to focus on Activity Streams as one way how streams of resource updates can be represented in a uniform, extensible, and machine-readable way.</p>
		</slide>
		<slide>
			<title>What's Missing?</title>
			<ul>
				<li>Reading through submissions, some clusters emerge:</li>
				<ol>
					<li>The <q>last mile</q> (how to efficiently connect constrained things)</li>
					<li>The <q>thing models</q> (in order to find/understand/use things, we need domain models)</li>
					<li>The <q>thing technology</q> (we have technology X, it's really great for WoT!)</li>
					<li>Specific <q>thing scenarios</q> (we want use certain things a certain way)</li>
				</ol>
				<li>But what's really missing for in today's Web?</li>
				<ol>
					<li>Choose some protocol/gateway combo or HTTP-enable your thing</li>
					<li>Base your media type of a domain model of your choice</li>
					<li>Let's find out what we need first</li>
					<li>Very useful to better figure out what we need...</li>
				</ol>
				<li>The Web thrives on services and their <q>surfaces</q></li>
				<ol>
					<li>Nobody should care if you run Java or PHP or C or Ruby or Python</li>
					<li>Nobody should care how your app server connects to the data store</li>
					<li>Nobody should care how you model your customers/products/services</li>
				</ol>
				<li>Let's focus on how to <em>expose thing-based services in Wot scenarios</em></li>
			</ul>
		</slide>
		<slide>
			<title>Interaction Scenarios</title>
			<ul>
				<li><q>The last mile</q> (how to connect the thing) might be better left to specialists</li>
				<ul>
					<li>What matters is identification and interaction, but <em>only via a representation</em> (a.k.a. <em title="Representational State Transfer">REST</em>)</li>
				</ul>
				<li>Instead, focus on scenarios such as aggregation, filtering, re-publication, subscription, ...</li>
				<ul>
					<li>How to interact using representations to achieve application goals</li>
				</ul>
				<li>We need an open and extensible framework and not a model for things</li>
				<ul>
					<li><a href="http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.atom">This feed</a> works in any reader that understands the <q>Atom framework</q></li>
				</ul>
				<li>Communities should be able to model whatever they think their things need</li>
				<ul>
					<li>This may or may not result in fragmentation, depending on the communities</li>
				</ul>
			</ul>
		</slide>
		<slide>
			<title>Sitting on the wrong branch can kill you</title>
			<img src="feedbot.jpg" style="float : right ; margin-top : 0.5em ; margin-right : 2em ; "/>
			<ul>
				<li>Atom's model was right but the foundation was too short-lived</li>
				<ul>
					<li>Once, there was a flourishing loosely coupled <a href="http://dret.typepad.com/dretblog/atom-landscape.html">Atom Landscape</a></li>
					<li>Disliking XML became trendy and that sealed Atom's fate</li>
				</ul>
				<li><a href="http://dret.typepad.com/dretblog/2009/05/atoms-future-as-a-generalpurpose-format.html">Atom's future didn't happen</a>, but it still needs to</li>
				<ul>
					<li>WoT scenarios are like newsfeeds on steroids (scale, volume, variety)</li>
					<li>But they are about the same set of interaction patterns</li>
				</ul>
				<li>Atom <em>only</em> models interaction-relevant data</li>
				<ul>
					<li>A simple model for well-known and domain-agnostic use cases</li>
					<li>A well-defined extension model so that domain data can be safely represented</li>
				</ul>
			</ul>
		</slide>
		<slide>
			<title>Activity Streams!</title>
			<ul>
				<li><a href="http://www.w3.org/2013/Social/WG">W3C Social Web Working Group</a></li>
			</ul>
		</slide>
		<slide>
			<title>What can we do?</title>
			<ul>
				<li>Follow the footsteps of previous H2M and M2M success stories of the Web</li>
				<ul>
					<li>only provide <em>interaction models</em>, do not provide <em>domain models</em></li>
					<li>Provide building blocks so that people can easily design their own media types</li>
					<li>Keep everything loosely coupled, so that spec work can adjust to reality</li>
				</ul>
				<li>A Web of Things is still a Web, and not something else entirely</li>
				<ul>
					<li>Remember <a href="http://en.wikipedia.org/wiki/Wireless_Application_Protocol">WAP</a>'s complete parallel universe? Because: <q>Mobile is different!</q></li>
					<li>The biggest challenge is to avoid <a href="http://en.wikipedia.org/wiki/Not_invented_here">NIH</a> and identify real pain points</li>
				</ul>
			</ul>
		</slide>
		<slide>
			<title>Conclusions</title>
			<ul>
				<li>Things are not something else entirely</li>
				<li>Let's start with use cases and requirements and see what's missing</li>
				<li>Let's work incrementally to fill gaps as required</li>
				<li>Maybe Activity Streams can provide a good foundation</li>
			</ul>
		</slide>
	</presentation>
</hotspot>