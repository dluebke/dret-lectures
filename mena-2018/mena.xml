<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy-new" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="mena.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title>MENA API Road Show 2018</title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
	<affiliation><a href="http://www.apiacademy.co/">API Academy</a>, <a href="http://www.ca.com/">CA Technologies</a></affiliation>
	<date short="2018-10">Kuwait · Riyadh · Abu Dhabi<br/>October 2018</date>
	<copyright>2018 Erik Wilde</copyright>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Title</th>
					<th valign="bottom">Slides</th>
					<th valign="bottom">Additional Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td valign="top"><b><hotspot:title/></b>: <hotspot:toc class="abstract"/></td>
						<td align="center"><hotspot:presentation-link title="Presentation Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<presentation id="api-strategy">
		<title>API Strategy</title>
		<toc class="abstract">Digital Transformation is a goal of many organizations today. It means to better align business and IT capabilities, allowing organizations to change faster and thus to be more competitive in the marketplace. Microservices and APIs play a central role in this strategy. Microservices allow to focus on how to build products that can be changed independent of each other. APIs allow to consistently expose capabilities so that products can be more easily combined and built on each other.</toc>
		<toc class="resources"><a href="http://www.apiacademy.co/">API Academy</a>&#160;· <a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/" title="Mike Amundsen, Matt McLarty, Ronnie Mitra, and Irakli Nadareishvili, 'Microservice Architecture: Aligning Principles, Practices, and Culture', O'Reilly Media, June 2016">MSA Book</a>&#160;· <a href="http://dret.net/netdret/publications#pau09a" title='Cesare Pautasso and Erik Wilde, "Why is the Web Loosely Coupled? A Multi-Faceted Metric for Service Design", 18th International World Wide Web Conference (WWW2009), Madrid, Spain, April 2009'>Loose Coupling</a>&#160;· <a href="http://dret.typepad.com/dretblog/2017/04/the-three-drivers-of-the-api-economy.html" title='Erik Wilde, "The Three Drivers of the API Economy", April 2017'>Three API Drivers</a>&#160;· <a href="http://apistylebook.com/" title='Arnaud Lauret, "API Stylebook"'>API Stylebook</a>&#160;· <a href="https://www.linkedin.com/pulse/reverse-engineering-organization-gregor-hohpe/" title='Gregor Hohpe, "Reverse Engineering the Organization", May 2018'>Reverse Engineering the Organization</a></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="introduction">
			<title>Introduction</title>
			<slide id="dretwitter">
				<title><code>@dret</code> on Twitter/GitHub</title>
				<img src="dret.png" title="dret" href="http://twitter.com/dret" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-academy">
				<title><a href="http://www.apiacademy.co/">API Academy</a></title>
				<img src="academy-logo.png" href="http://www.apiacademy.co/" title="API Academy" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver): <a href="http://twitter.com/MattMcLartyBC" class="twitter-follow-button" title="Matt McLarty on Twitter: @MattMcLartyBC"><code>@MattMcLartyBC</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati): <a href="http://twitter.com/mamund" class="twitter-follow-button" title="Mike Amundsen on Twitter: @mamund"><code>@mamund</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mehdi-medjaoui/">Mehdi Medjaoui</a> (San Francisco): <a href="http://twitter.com/medjawii" class="twitter-follow-button" title="Mehdi Medjaoui on Twitter: @medjawii"><code>@medjawii</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London): <a href="http://twitter.com/mitraman" class="twitter-follow-button" title="Ronnie Mitra on Twitter: @mitraman"><code>@mitraman</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich): <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Publishing (blogs, articles, books, <a href="https://soundcloud.com/user-426834320">podcasts</a>)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="msa-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">free electronic version courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>UC Berkeley (2006-2011), working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>EMC (2011-2014), working on transforming software products into service platforms</li>
					<li>Siemens (2014-2015), working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in 2016 and now all about API Strategy and Design</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="http://dret.typepad.com/dretblog/">my blog</a>, <a href="http://www.linkedin.com/in/netdret">LinkedIn</a>, and <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a></li>
				</ul>
			</slide>
		</part>
		<part id="amazon">
			<title>The Bezos Mandate</title>
			<slide id="amazon-rules">
				<title><a href="https://gist.github.com/chitchcock/1281611">Jeff Bezos' Services Rant: The Rules</a></title>
				<ul>
					<li>Famous small set of SOA design rules</li>
					<ul>
						<li>Teams must expose functionality through services</li>
						<li>Communication happens only through service interfaces</li>
						<li>There are no hard guidelines for service design</li>
						<li>Internal/external service is a matter of policy, not one of design</li>
					</ul>
					<li>Going against the <q>let's pick a platform</q> spirit of old-school SOA</li>
				</ul>
			</slide>
			<slide id="amazon-consequences">
				<title>Jeff Bezos' Services Rant: <a href="https://plus.google.com/+RipRowan/posts/eVeouesvaVX">The Consequences</a></title>
				<ul>
					<li>With more freedom comes more responsibility</li>
					<ul>
						<li>Monitoring and metrics are necessary for finding root causes</li>
						<li>All APIs must be hardened against DoS attacks</li>
						<li>Automated QA is necessary to really understand service health</li>
						<li>Services must be documented and registered so that they can be discovered</li>
						<li>Debugging becomes harder because of service dependencies</li>
					</ul>
					<li>Sophisticated tooling required to manage the new SOA landscape</li>
					<li>Much easier in today's technology landscape than 15 years ago</li>
				</ul>
			</slide>
		</part>
		<part id="digital-transformation">
			<title>Digital Transformation</title>
			<slide id="digital-transformation-challenge">
				<title>Digital Transformation Challenge</title>
				<img title="Digital Transformation" src="cobra-digital-transformation.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="worldwide-digital-transformation">
				<title>Worldwide Digital Transformation</title>
				<img title="Japan" src="godzilla-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
				<img title="Australia" src="crocodile-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
				<img title="United States" src="bear-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
				<img title="Poland" src="wolf-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
				<img title="South Africa" src="shark-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
				<img title="Colombia" src="jaguar-digital-transformation.jpg" style=" width : 28% ; height : 30% ; object-fit : contain ; margin : 1% 1% 1% 1% ; "/>
			</slide>
			<slide id="transformation">
				<title>Transformation: Changing vs. Changeable</title>
				<ul>
					<li><em>Changing</em> implies a one-time activity</li>
					<li><em>Changeable</em> implies an intrinsic property</li>
					<blockquote>
						<p>Don't focus on what to <b>change into</b>;<br/>Focus on <b>embracing change</b> as your mode of existence.</p>
					</blockquote>
				</ul>
			</slide>
			<slide id="transformation-1-2-3">
				<title>Digital Transformation 1-2-3</title>
				<ol>
					<li>Decrease coupling to increase agility → <link href="loose-coupling">Loose coupling</link></li>
					<li>Allow easy (re-)combination of capabilities → <link href="apis">APIs</link></li>
					<li>Keep capabilities self-contained → <link href="microservices">Microservices</link></li>
				</ol>
				<ul>
					<li><link href="beyond-tech">The hard part</link> is everything beyond technology and tools</li>
				</ul>
			</slide>
			<slide id="loose-coupling">
				<title>Loose Coupling</title>
				<ul>
					<li><em>Web architecture</em> is strikingly different from typical enterprise IT architecture</li>
					<ul>
						<li>Interactions are always governed by protocols/contracts</li>
						<li>Implementation is always up to service providers and consumers</li>
					</ul>
					<li>The Web's constraints have created a unique and dynamic ecosystem</li>
					<ul>
						<li>Services with no hidden dependencies</li>
						<li>Choosing the best tool for the job</li>
						<li>Reacting quickly when customers or markets change</li>
						<li>Experimenting ruthlessly while keeping exploration cost low</li>
					</ul>
					<li>Thought experiment: How would your IT architecture work at Web scale?</li>
				</ul>
			</slide>
			<slide id="apis">
				<title>APIs</title>
				<ul>
					<li>APIs are necessary to move from IT systems to ecosystems</li>
					<ul>
						<li><em>Systems</em> are integrated (easy to build, hard to change)</li>
						<li><em>Ecosystems</em> are decentralized (hard to build, easy to change)</li>
					</ul>
					<li>API adoption has been driven by two main scenarios</li>
					<ul>
						<li><em>Interfacing externally</em> for new ways of conducting/connecting businesses</li>
						<li><em>Interfacing internally</em> as a new approach for enterprise IT architecture</li>
					</ul>
					<li>API adoption has been driven by three main drivers</li>
					<ul>
						<li><em>Push:</em> Not moving becomes an increasingly risky strategy</li>
						<li><em>Pull:</em> Participating in the API economy is increasingly beneficial (a.k.a. the <em href="https://en.wikipedia.org/wiki/Metcalfe%27s_law">network effect</em>)</li>
						<li><em>Follow the Leaders:</em> Moving towards APIs is not difficult anymore</li>
					</ul>
				</ul>
			</slide>
			<slide id="microservices">
				<title>Microservices: The Web, Industrialized</title>
				<ul>
					<li>MSA is about <em>service autonomy</em> in service-oriented landscapes</li>
					<li>MSA is also about <em>effectiveness</em> in autonomy-focused service-oriented landscapes</li>
					<ul>
						<li><em>Rapid provisioning</em> means that getting started is an easy task</li>
						<li><em>Basic monitoring</em> establishes visibility into service operations</li>
						<li><em>Rapid deployment</em> increases the velocity of service landscape evolution</li>
					</ul>
					<li>MSA applies Web Architecture's <link href="loose-coupling">loose coupling</link> to the enterprise IT space</li>
					<li>MSA is all about being webby while minimizing the cost</li>
				</ul>
			</slide>
			<slide id="beyond-tech">
				<title>Organizational/Structural Issues</title>
				<ul>
					<li>Optimizing for change takes strategy and execution</li>
					<ul>
						<li>Preventing shortcuts by having and communicating goals</li>
					</ul>
					<li>Balancing diversity and dynamics with the need for some coherence/standards</li>
					<ul>
						<li><em>Rules</em> tell teams how to solve problems</li>
						<li><em>Constraints</em> explain teams what to do (and why)</li>
					</ul>
					<li>Digital transformation is a deep organizational readjustment</li>
					<ul>
						<li>Clear communications and strategy from the top down</li>
						<li>Education and training to enable teams to succeed</li>
						<li>Focusing on constraints and moving away from rules</li>
						<li>Removing bottlenecks by providing support when necessary</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="what-now">
			<title>What Now?</title>
			<slide id="design-guidelines">
				<title>Nurturing the Ecosystem</title>
				<ul>
					<li>Create <a href="http://apistylebook.com/design/guidelines/" title="API Stylebook: Design Guidelines">design guidelines</a> that teams can use</li>
					<li>Writing as a form of communication</li>
					<ul>
						<li>Reading guidelines allows teams to understand the current practice</li>
						<li>Writing guidelines allows teams to improve practices</li>
					</ul>
					<li>Structured guidance to better communicate reasoning, support, and validation</li>
					<ul>
						<li><q>Why</q>: Explains the reasoning for each guidance</li>
						<li><q>What</q>: Explains what teams have to comply with at the API level</li>
						<li><q>How</q>: Provides support for how to implement the guidance</li>
						<li><q>Test</q>: Makes it easier for teams to verify compliance</li>
					</ul>
				</ul>
			</slide>
			<slide id="digital-transformation-status">
				<title>Digital Transformation Assessment</title>
				<img href="https://www.linkedin.com/pulse/reverse-engineering-organization-gregor-hohpe/" src="cio-reporting-line.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="business-plumbing">
				<title>APIs as Business Plumbing</title>
				<ul>
					<li>APIs are <em>necessary</em> but not <em>sufficient</em> for digital transformation</li>
					<li>APIs must <em>support</em> and <em>reflect</em> increased speed and agility of business</li>
					<li>Microservices are <em>one possible architecture</em> to implement API products</li>
					<li>Asking <q>What would the Web do?</q> is always a valuable exercise</li>
				</ul>
			</slide>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/mena-2018"><code>dret.net/lectures/mena-2018</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/mena-2018"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>My homepage: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter handles:</li>
					<ul>
						<li>Erik Wilde: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
						<li>API Academy: <a href="http://twitter.com/APIacademy" class="twitter-follow-button" data-size="large" title="API Academy on Twitter: @APIacademy"><code>@APIacademy</code></a></li>
						<li>Standards Daily: <a href="http://twitter.com/StandardsDaily" class="twitter-follow-button" data-size="large" title="Standards Daily on Twitter: @StandardsDaily"><code>@StandardsDaily</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="api-design">
		<title>API Design</title>
		<toc class="abstract">APIs are the foundation of many digital transformation initiatives. However, APIs come in many shapes and forms, and making the right design decisions is not an easy task. This becomes even more important in large organizations, where the challenge is to make good design decisions for individual APIs, while still making sure that there is a shared design culture across the organization's API landscape. This presentation takes a structured look at what matters for API design, and what good practices are when it comes to creating and managing an organizational API design culture.</toc>
		<toc class="resources"><a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html" title='Erik Wilde, "Patterns for Robust Extensibility", April 2016'>Robust Extensibility</a>&#160;· <a href="https://github.com/OAI/OpenAPI-Specification" title="OpenAPI Specification Repository">OpenAPI</a>&#160;· <a href="http://openapi-map.apihandyman.io/?version=3.0" title="Interactive OpenAPI Map by Arnaud Lauret">OpenAPI Map</a></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="continuous-architecting">
			<title>How? Continuous Architecting!</title>
			<slide id="car-interior">
				<title>Interface Design</title>
				<img src="audi-rs6-plus-interior.jpg" title="Audi RS6 Plus Interior" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="continuous-architecture">
				<title>Continuous Architecture</title>
				<img src="model-t.jpg" title="Model T Speedster" href="https://commons.wikimedia.org/wiki/File:1913_Ford_Model_T_Speedster_dashboard.JPG" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-api">
				<title>API your APIs</title>
				<ul>
					<li>Expose design-time and runtime API information in the API</li>
					<ul>
						<li><em>Design-time</em> allows automation of API landscape overview</li>
						<li><em>Runtime</em> allows automation of API landscape status</li>
					</ul>
					<li>Follow <a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html">robust extensibility principles</a> for these <q>API APIs</q></li>
					<ul>
						<li><em>Meaningful Core:</em> Start with a simple but useful scenario</li>
						<li><em>Extension Points:</em> Think about how scenarios might evolve</li>
						<li><em>Processing Model:</em> Be clear about how extensions are handled</li>
					</ul>
				</ul>
			</slide>
			<slide id="api-patterns">
				<title>Emerging API Patterns</title>
				<ul>
					<li>Self-description for APIs is increasing</li>
					<li><a href="http://webconcepts.info/specs/IETF/RFC/7807">Problem details</a> as a way how APIs expose error information</li>
					<ul>
						<li>Enables generic error handling but also allows additional information</li>
					</ul>
					<li><a href="http://webconcepts.info/specs/IETF/I-D/nottingham-json-home">Home documents</a> as a way how APIs provide starting pages</li>
					<ul>
						<li>Enables harvesting of API start points but also allows additional information</li>
					</ul>
					<li><a href="http://webconcepts.info/specs/IETF/I-D/inadarei-api-health-check">Healthcheck reports</a> as a way how APIs expose status information</li>
					<ul>
						<li>Enables landscape-level status reports but also allows additional information</li>
					</ul>
					<li><a href="http://dret.net/lectures/apistrat-2018">API Labels</a> as a way for representing <q>API product labels</q></li>
					<ul>
						<li>Share <em>API labels</em> as a way to describe cross-cutting aspects of APIs</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="api-styles">
			<title>API Styles</title>
		</part>
		<part id="openapi">
			<title>OpenAPI/Swagger Introduction</title>
			<slide id="openapi-basics">
				<title>OpenAPI Basics</title>
				<img src="openapi-logo.png" href="https://www.openapis.org/" style="float : right ; width : 20% ; margin-top : 0.5em ; margin-right : 2em ; "/>
				<ul>
					<li>Swagger started as an easy way to generate code from an API description</li>
					<ul>
						<li><em>Server code</em> is generated by generating stubs for all specified URI paths</li>
						<li><em>Client code</em> generates SDKs for clients by wrapping API interactions</li>
					</ul>
					<li><em>Swagger</em> was renamed to <em>OpenAPI</em> at the beginning of 2016</li>
					<ul>
						<li>Swagger still exists <a href="https://smartbear.com/">as a product suite</a> offered by <a href="https://swaggerhub.com/">SmartBear</a></li>
						<li><a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md">OpenAPI 3.0</a> is the first standalone OpenAPI version and was <a href="https://www.openapis.org/blog/2017/07/26/the-oai-announces-the-openapi-specification-3-0-0">released in July 2017</a></li>
					</ul>
					<li>OpenAPI is focused on <link href="uri-style"/> APIs by modeling APIs as sets of URI paths</li>
					<ul>
						<li>Paths can be templated and have operations and optionally parameters</li>
						<li>JSON support is built into OpenAPI for request/response schemas</li>
						<li>XML support is present but rather weak in terms of XML sophistication</li>
					</ul>
				</ul>
			</slide>
			<slide id="json-yaml">
				<title>JSON and YAML</title>
				<ul>
					<li>JSON is the de-facto standard for structured data on the Web</li>
					<li>JSON is human-readable but visibly comes from a code background</li>
					<li><a href="http://yaml.org/" title="YAML Ain't Markup Language">YAML</a> evolved as a human-readable format for configuration data</li>
					<ul>
						<li>JSON data can be written in YAML for a more human-friendly syntax</li>
						<li>YAML has many additional features that JSON does not support</li>
					</ul>
					<li>OpenAPI is defined in JSON and allows JSON and YAML representations</li>
				</ul>
			</slide>
			<slide id="openapi-info-json">
				<title>OpenAPI Info Object (JSON)</title>
				<listing src="openapi-info.json" href="https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#infoObject"/>
			</slide>
			<slide id="openapi-info-yaml">
				<title>OpenAPI Info Object (YAML)</title>
				<listing src="openapi-info.yaml" href="https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#infoObject"/>
			</slide>
			<slide id="minimal-openapi-example">
				<title>Minimal OpenAPI Example</title>
				<ul>
					<li>Identification of the Swagger/OpenAPI version</li>
					<li>Minimal metadata about the described API</li>
					<li>URIs that are made available by the API</li>
					<li>Operations that can be performed on these URIs</li>
					<li>Responses to expect from these operations</li>
				</ul>
			</slide>
			<slide id="swagger-weather-json">
				<title>Minimal Swagger Example (JSON)</title>
				<listing src="swagger-weather.json"/>
			</slide>
			<slide id="swagger-weather-yaml">
				<title>Minimal Swagger Example (YAML)</title>
				<listing src="swagger-weather.yaml"/>
			</slide>
			<slide id="openapi-weather-json">
				<title>Minimal OpenAPI Example (JSON)</title>
				<listing src="openapi-weather.json"/>
			</slide>
			<slide id="openapi-weather-yaml">
				<title>Minimal OpenAPI Example (YAML)</title>
				<listing src="openapi-weather.yaml"/>
			</slide>
			<slide id="openapi-query-parameter">
				<title>Paths with Query Parameters</title>
				<ul>
					<li>URIs with Query Parameters: <code>/pets?limit=42</code></li>
				</ul>
				<listing src="petstore.yaml" line="10-23"/>
			</slide>
			<slide id="openapi-path-parameter">
				<title>Paths with Path Parameters</title>
				<ul>
					<li>URIs with Path Parameters: <code>/pets/somepetname</code></li>
				</ul>
				<listing src="petstore.yaml" line="56-68"/>
			</slide>
			<slide id="openapi-editor">
				<title>OpenAPI/Swagger Editor</title>
				<img title='Web-based interactive OpenAPI/Swagger editor' href="https://editor.swagger.io/" src="swagger-editor-petstore.png" class="fullsize"/>
			</slide>
			<slide id="openapi-map">
				<title>OpenAPI: The Complete Picture</title>
				<img title='OpenAPI Map by Arnau Lauret' href="http://openapi-map.apihandyman.io/?version=3.0" src="openapi-map.png" class="fullsize"/>
			</slide>
			<slide id="openapi-summary">
				<title>OpenAPI Summary: Describing URI Style APIs</title>
				<ul>
					<li>OpenAPI describes APIs by listing all resource paths</li>
					<li>OpenAPI is often used to generate server/client code</li>
					<li>OpenAPI creates a static and tightly coupled API landscape</li>
					<li>Evolving OpenAPI APIs is not a core part of OpenAPI's mission</li>
				</ul>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/mena-2018"><code>dret.net/lectures/mena-2018</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/mena-2018"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>My homepage: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter handles:</li>
					<ul>
						<li>Erik Wilde: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
						<li>API Academy: <a href="http://twitter.com/APIacademy" class="twitter-follow-button" data-size="large" title="API Academy on Twitter: @APIacademy"><code>@APIacademy</code></a></li>
						<li>Standards Daily: <a href="http://twitter.com/StandardsDaily" class="twitter-follow-button" data-size="large" title="Standards Daily on Twitter: @StandardsDaily"><code>@StandardsDaily</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>