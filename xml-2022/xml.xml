<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="youtube" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="https://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="xml.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="https://creativecommons.org/licenses/by/4.0/" short="CC BY 4.0">
		<div class="license">
			<p><a rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/youtube/logo/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="View full text of license" href="https://creativecommons.org/licenses/by/4.0/">This work is licensed under a CC<br/>Attribution 4.0 International License</a></p>
		</div>
	</license>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Date</th>
					<th valign="bottom">Title</th>
					<th valign="bottom">Slides</th>
					<th valign="bottom">Video</th>
					<th valign="bottom">Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td valign="top"><span class="title"><hotspot:date/></span></td>
						<td valign="top"><b><span class="title"><hotspot:title/></span></b></td>
						<td align="center" valign="top"><hotspot:presentation-link title="Presentation Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="video"/></td>
						<td align="center" valign="top"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<title><a href="https://youtube.com/ErikWilde">Getting APIs to Work</a>: Understanding XML</title>
	<author>Erik Wilde <a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
	<copyright>2022 Erik Wilde</copyright>
	<presentation id="overview">
		<title short="XML Tech Overview">An Overview of XML Technologies: XML Namespaces, XPath, XSLT, and XQuery</title>
		<toc class="resources"><a href="http://dret.net/netdret/docs/wilde-cacm2008-xml-fever.html" title='Erik Wilde and Robert J. Glushko, "XML Fever", Communications of the ACM, 51(7):40-46, July 2008'>XML&#160;Fever</a></toc>
		<part id="overview-xml">
			<title>Extensible Markup Language (XML) Overview</title>
		</part>
		<part id="overview-xml-namespaces">
			<title>XML Namespaces Overview</title>
		</part>
		<part id="overview-dtd">
			<title>XML Document Type Definition Overview</title>
		</part>
		<part id="overview-xsd">
			<title>XML Schema Definition (XSD) Overview</title>
		</part>
		<part id="overview-xpath">
			<title>XPath Overview</title>
			<slide>
				<title>XPath Versions: XPath 1.0 and XPath 2.0</title>
			</slide>
		</part>
		<part id="overview-xslt">
			<title>XSLT Overview</title>
			<slide>
				<title>XSLT using XPath</title>
				<img src="xslt-overview.png" title="XSLT Processing" class="fullsize"/>
			</slide>
		</part>
		<part id="overview-xquery">
			<title>XQuery Overview</title>
			<slide>
				<title>XQuery using XPath</title>
				<img src="xquery-overview-filesystem.png" title="File-based XQuery Processing" class="fullsize"/>
			</slide>
			<slide>
				<title>XQuery using XPath + Database</title>
				<img src="xquery-overview-dbms.png" title="DB-based XQuery Processing" class="fullsize"/>
			</slide>
		</part>
		<part id="overview-conclusions">
			<title>Conclusions</title>
			<slide id="overview-end">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/xml-2022/xml"><code>dret.net/lectures/xml-2022/overview</code></a></li>
					<li>More information about myself:</li>
					<ul>
						<li><a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">Twitter: <code>@dret</code></a></li>
						<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
						<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="xml">
		<title short="XML Foundations">What is the Extensible Markup Language (XML) and how does it work?</title>
		<toc class="resources"><a href="http://www.w3.org/TR/REC-xml/" title="W3C XML 1.0 Specification">XML&#160;1.0&#160;Spec</a></toc>
		<part id="xml-history">
			<title>History</title>
			<slide id="example">
				<title>GPX: GPS Data in XML</title>
				<listing src="central-park.gpx"  line="2-21"/>
			</slide>
			<slide id="data-on-the-web">
				<title>Data Representation on the Web</title>
				<ul>
					<li></li>
				</ul>
			</slide>
			<slide id="xml-rpc-soap">
				<title>XML-RPC and SOAP</title>
			</slide>
			<slide id="xml-today">
				<title>XML Today</title>
				<ul>
					<li>OOXML as a format for representing office documents</li>
					<li>SVG as a format for vector graphics on the Web</li>
					<li>Still many SOAP APIs in production use</li>
					<li>Document-oriented workflows such as in publishing</li>
				</ul>
			</slide>
		</part>
		<part id="xml-concepts">
			<title>XML Concepts</title>
			<slide id="byo-html">
				<title>XML is BYO HTML</title>
				<ul>
					<li>It allows defining custom elements and attributes</li>
					<li>Its syntax is a bit more strict than HTML (ever heard of XHTML?)</li>
					<li>There are many layered technologies on top of XML itself</li>
				</ul>
			</slide>
		</part>
		<part id="xml-practice">
			<title>XML in Practice</title>
			<slide>
				<title>Example: GPS Activity Tracking</title>
				<img src="central-park-loop.png" href="https://www.strava.com/activities/3130850683" class="fullsize-shadow"/>
			</slide>
			<slide>
				<title>GPX: GPS Data in XML</title>
				<listing src="central-park.gpx"  line="2-21"/>
			</slide>
		</part>
		<part id="xml-schemas">
			<title>XML Schema Languages</title>
			<part id="xml-schemas-dtd">
				<title>XML Document Type Definition (DTD)</title>
			</part>
			<part id="xml-schemas-xsd">
				<title>XML Schema Definition (XSD)</title>
			</part>
		</part>
		<part id="xml-conclusions">
			<title>Conclusions</title>
			<slide id="xml-end">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/xml-2022/xml"><code>dret.net/lectures/xml-2022/xml</code></a></li>
					<li>More information about myself:</li>
					<ul>
						<li><a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">Twitter: <code>@dret</code></a></li>
						<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
						<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="namespaces">
		<title short="XML Namespaces">XML Namespaces: Identifying XML Vocabularies</title>
		<date short="2022-12-06">December 6, 2022</date>
		<toc class="video"><a href="https://www.youtube.com/watch?v=nR1Fc-bBxYk"><img src="youtube-logo.png" style=" height : 1em ; "/></a></toc>
		<toc class="resources"><a href="http://www.w3.org/TR/REC-xml-names/" title="W3C XML Namespaces Specification">XML&#160;Namespaces&#160;Spec</a></toc>
		<part id="namespaces-intro">
			<title>Introduction</title>
			<slide id="namespaces-overview">
				<title>Understanding XML Namespaces</title>
				<ul>
					<li><link href="namespaces-motivation">Motivation: What problem do XML Namespaces solve?</link></li>
					<li><link href="using-namespaces">Using Namespaces: How they work and how to use them</link></li>
					<li><link href="namespaces-good-practices">Good practices for XML Namespaces</link></li>
				</ul>
			</slide>
			<slide id="overview-understanding">
				<title>Understanding XML</title>
				<ul>
					<li><link href="xml">XML Foundations: What is XML and how does it work?</link></li>
					<li><link href="namespaces">XML Namespaces: Identifying XML vocabularies</link></li>
					<li><link href="xpath">XPath: Selecting data in XML documents</link></li>
					<li><link href="xpath-2">XPath 2.0: From location paths to expressions</link></li>
				</ul>
			</slide>
		</part>
		<part id="namespaces-motivation">
			<title>Motivation</title>
			<slide id="problem-1">
				<title>Problem 1: Across XML Documents</title>
				<ul>
					<li>Names in XML documents can conflict across documents</li>
				</ul>
				<listing src="naming-xml-1-plain.xml"/>
				<listing src="naming-xml-2-plain.xml"/>
				<ul>
					<li>Namespaces turn local names into globally unique names</li>
				</ul>
				<listing src="naming-xml-1-xmlns.xml"/>
				<listing src="naming-xml-2-xmlns.xml"/>
			</slide>
			<slide id="problem-2">
				<title>Problem 2: Composing XML Documents</title>
				<ul>
					<li>How to keep names separate when combining documents</li>
				</ul>
				<listing src="naming-xml-1-xmlns.xml"/>
				<listing src="naming-xml-2-xmlns.xml"/>
				<listing src="naming-xml-3-xmlns.xml"/>
			</slide>
			<slide id="name-meaning">
				<title>What do XML Names mean?</title>
				<ul>
					<li>XML documents use names (elements and attributes)</li>
					<li>Names are supposed to identify meaningful chunks of data</li>
					<li>XML schemas (such as DTD or XSD) define allowed elements/attributes</li>
					<li>XML has been designed to support the combination of schemas</li>
				</ul>
			</slide>
			<slide id="namespaces-gpx-example">
				<title>GPX: GPS Data in XML</title>
				<listing src="central-park.gpx" line="2-21"/>
			</slide>
			<slide id="name-spaces">
				<title>Name Spaces</title>
				<ul>
					<li>XML's main concepts (elements/attributes) are using names</li>
					<li>Names are an important form of identification</li>
					<li>Names in XML are not suitable for (globally unique) identification</li>
					<ul>
						<li>They are local to where they are used</li>
						<li>If the context is uniquely identified, so are the names</li>
					</ul>
					<li>Name Spaces: <em>Put names into spaces</em></li>
					<ul>
						<li>How to identify the name space? Identifiers on the Web are URIs!</li>
					</ul>
				</ul>
			</slide>
			<slide id="xmlns-definition">
				<title>XML Namespace Definition</title>
				<ul>
					<li>XML elements and attributes can be associated with a namespace</li>
					<li>XML namespaces are identified by URIs</li>
					<li>All relevant XML technologies are based on and supporting XML namespaces</li>
				</ul>
			</slide>
			<slide>
				<title>The URI Instinct</title>
				<ul>
					<li><em>Namespace names</em> are URIs</li>
					<li>People assume that URIs point to Web pages</li>
					<ul>
						<li>A namespace name may point to a Web page</li>
						<li>It may also have no Web page associated with it</li>
					</ul>
					<li>People expect namespace URIs to provide useful information</li>
					<ul>
						<li>Friendly namespaces provide HTML pages (<a href="http://www.w3.org/1999/xhtml">XHTML</a> and <a href="http://www.w3.org/1999/XSL/Transform">XSLT</a>)</li>
						<li>Some namespaces just give you the schema (<a href="http://www.w3.org/2001/12/soap-envelope">SOAP</a>)</li>
						<li>Unfriendly namespaces may return 404 or use inaccessible URI schemes</li>
						<li>They all are correct, because <em>all that matters is the namespace name/URI</em></li>
					</ul>
					<li>Namespaces are always recognized <em>by comparing URIs</em></li>
				</ul>
			</slide>
			<slide id="namespaces-are-simple">
				<title>Simpler Than You Think</title>
				<ul>
					<li>XML namespaces put XML names in spaces</li>
					<li>Each space is identified by a URI</li>
					<li><q>Understanding</q> a namespace is out of scope</li>
					<li>Make no assumptions about namespace URIs and all is good</li>
				</ul>
			</slide>
		</part>
		<part id="using-namespaces">
			<title>Using XML Namespaces</title>
			<slide id="namespaces-basics">
				<title>XML Namespaces Basics</title>
				<ul>
					<li>XML Namespaces are declared using <code>xmlns</code> attributes</li>
					<li>Each declaration declares the default namespace or a prefix</li>
					<ul>
						<li><code>xmlns=""</code> declares the <em>default namespace</em></li>
						<li><code>xmlns:prefix=""</code> declares <em>namespaces prefixes</em></li>
					</ul>
					<li>Declarations work in the usual XML tree-oriented way</li>
					<li>Names (elements/attributes) use namespaces by using a prefix</li>
				</ul>
			</slide>
			<slide id="namespace-example">
				<title>Example XML Namespace Declarations</title>
				<listing src="namespace-example.xml"/>
				<ul>
					<li>Three namespaces declared by three <code>xmlns</code> attributes</li>
					<ul>
						<li>The default namespace and two prefix-associated namespaces</li>
						<li>Namespaces can be declared on any element in the document</li>
					</ul>
					<li>Three elements from three different namespaces</li>
					<ul>
						<li>Having the same <em>local name</em> does not make it the same element</li>
					</ul>
				</ul>
			</slide>
			<slide id="prefix-examples">
				<title>Identical XML Documents</title>
				<listing src="namespace-default.xml"/>
				<listing src="namespace-prefix-1.xml"/>
				<listing src="namespace-prefix-2.xml"/>
			</slide>
			<slide id="namespaces-practice">
				<title>Using Namespaces in Practice</title>
				<ul>
					<li>Namespaces must be used by comparing URIs</li>
					<ul>
						<li>Everything else is brittle and can break anytime</li>
						<li>Prefixes have no effect on a name in an XML namespace</li>
					</ul>
					<li>Treat prefixes as a representation detail</li>
					<ul>
						<li>When <em>parsing XML</em>, always use namespace URIs (and not prefixes)</li>
						<li>When <em>writing XML</em>, create prefixes that are commonly used</li>
					</ul>
				</ul>
			</slide>
			<slide id="namespaces-xpath">
				<title>XPath for Finding Namespaces</title>
				<ul>
					<li><code>//*</code> → select all elements of an XML document</li>
					<li><code>namespace-uri()</code> → return the namespace name of a node</li>
					<li><code>distinct-values()</code>  →  return all distinct values of a sequence</li>
				</ul>
				<pre>distinct-values(//*/namespace-uri())</pre>
			</slide>
		</part>
		<part id="namespaces-good-practices">
			<title>Good Practices</title>
			<slide id="namespaces-recommendations">
				<title>Keep it Simple</title>
				<ul>
					<li>Declare all prefixes on the document element</li>
					<li>Only declare prefixes that are used in the document</li>
					<li>Use <em>speaking names</em> for prefixes</li>
					<ul>
						<li>If you create a namespace also define a <q>preferred prefix</q></li>
					</ul>
				</ul>
			</slide>
			<slide id="namespaces-anti-patterns">
				<title>Namespaces Anti-Patterns</title>
				<!-- Examples are based on http://lists.xml.org/archives/xml-dev/200204/msg00170.html -->
				<listing src="neurotic.xml"/>
				<listing src="borderline.xml"/>
			</slide>
		</part>
		<part id="namespaces-conclusions">
			<title>Conclusions</title>
			<slide id="xml-needs-namespaces">
				<title>XML Needs Namespaces</title>
				<ul>
					<li>If you do anything with XML, learn namespaces</li>
					<li>XML namespaces are simpler than most people think</li>
					<li>All XML technologies are based on XML namespaces</li>
					<li>Knowing XML namespaces will make your XML life much easier</li>
				</ul>
			</slide>
			<slide id="namespaces-end">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/xml-2022/namespaces"><code>dret.net/lectures/xml-2022/namespaces</code></a></li>
					<li>More information about myself:</li>
					<ul>
						<li><a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">Twitter: <code>@dret</code></a></li>
						<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
						<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="xpath">
		<title short="XPath">XPath: Selecting Data in XML documents</title>
		<date short="2022-12-13">December 13, 2022</date>
		<toc class="resources"><a href="http://www.w3.org/TR/xpath" title="W3C XPath 1.0 Specification">XPath&#160;1.0&#160;Spec</a></toc>
		<part id="why-xpath">
			<title>Why XPath?</title>
			<slide id="xml-selection">
				<title>Selecting Data in XML Documents</title>
				<ul>
					<li>XML documents are trees represented by markup</li>
					<ul>
						<li>Extracting information with plain text tooling is a bad idea</li>
					</ul>
					<li>XML technologies provide support for working with trees</li>
					<ul>
						<li>Programmatic access to the tree should be easy (DOM)</li>
						<li>Validating trees should be easy (XSD)</li>
						<li>Mapping trees should be easy (XSLT)</li>
						<li>Querying tree collections should be easy (XQuery)</li>
						<li>XPath is what regular expressions are for text-based information</li>
					</ul>
				</ul>
			</slide>
			<slide id="reusable-selection">
				<title>Making Selection Reusable</title>
				<ul>
					<li>Different XML technologies need selection</li>
					<ul>
						<li>XSLT needs it for selecting input data</li>
						<li>XML Schema needs it for identity constraints</li>
						<li>DOM needs it for extracting parts from an XML tree</li>
						<li>XQuery needs it for working with XML databases</li>
					</ul>
					<li>XPath was created to be reusable</li>
					<ul>
						<li>XML users only have to learn one selection language</li>
						<li>Knowledge can be reused when learning new technologies</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="xpath-how">
			<title>How XPath Works</title>
			<slide id="xpath-tree">
				<title>Working on XML Trees</title>
				<ul>
					<li>XPath operates on an <em>abstract XML data model</em></li>
					<li>An XML document is turned into an <em>XPath node tree</em></li>
					<li>Some XML details are <u>not</u> in the XPath tree</li>
					<ul>
						<li>The order of attributes in a start tag</li>
						<li>The types of quotes around attribute values</li>
						<li>Character references and entities (<code>&amp;#xFC;</code>/<code>&amp;uuml;</code> → <code>ü</code>)</li>
						<li>Namespace declarations are no longer visible as attributes</li>
						<li>Notations and unexpanded entity references</li>
					</ul>
				</ul>
			</slide>
			<slide id="xpath-example-xml-document">
				<title>Example XML Document (GPS Data in GPX)</title>
				<listing src="central-park.gpx"  line="2-21"/>
			</slide>
			<slide id="xpath-example-xml-tree">
				<title>XML is Trees</title>
				<img src="gpx-xml-tree.png" title="GPX XML Document as Tree" class="fullsize"/>
			</slide>
			<slide id="xpath-evaluation">
				<title>Tree In / Nodes Out</title>
				<ul>
					<li>XPath evaluates an expression based on a tree</li>
					<li>Where the tree comes from is out of XPath's scope</li>
					<li>The result of the evaluation is a selection</li>
					<ul>
						<li><code>//trkpt[ele > 30]</code> → select all track points above elevation 30</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="xpath-axes">
			<title>Axes</title>
			<slide id="axes-intro">
				<title>Where Do You Want to Go Today?</title>
				<ul>
					<li>File system paths are one direction only</li>
					<ul>
						<li>Always one level down in the file system hierarchy</li>
						<li><code>.</code> and <code>..</code> are clever directory shortcuts</li>
					</ul>
					<li>XPath allows steps is different directions</li>
					<ul>
						<li>The default direction is <code>child</code></li>
						<li>Other directions must be explicitly specified: <code>descendant::a</code></li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>All XPath Axes</title>
				<img src="xpath-axes.png" title="XPath Axes Overview" class="fullsize"/>
			</slide>
			<slide id="attribute-axis">
				<title>Attribute are Nodes, too</title>
				<ul>
					<li>Attributes are nodes in the XML tree</li>
					<li>Attributes are <em>not children of elements</em></li>
					<li><code>attribute</code> is a special axis that addresses attributes</li>
					<li><code>@</code> is a convenient shortcut for the attribute axis</li>
				</ul>
				<pre>/child::gpx/attribute::version</pre>
				<pre>/gpx/@version</pre>
			</slide>
			<slide id="abbreviations">
				<title>Abbreviations</title>
				<ul>
					<li><code>.</code> is short for <code>self::node()</code></li>
					<li><code>..</code> is short for <code>parent::node()</code></li>
					<li><code>//</code> is short for <code>/descendant-or-self::node()/</code></li>
				</ul>
				<pre>.//para</pre>
				<pre>self::node()/descendant-or-self::node()/child::para</pre>
			</slide>
		</part>
		<part id="xpath-node-tests">
			<title>Node Tests</title>
			<slide id="xpath-nodetest">
				<title>Tests for Nodes</title>
				<ul>
					<li>Name tests</li>
					<ul>
						<li>Testing for a name (elements/attributes): <code>/gpx/trk/name</code></li>
						<li>Wildcard (matching any name): <code>/gpx/trk/*</code></li>
					</ul>
					<li>Node type tests</li>
					<ul>
						<li>Text nodes: <code>text()</code></li>
						<li>Comment nodes: <code>comment()</code></li>
						<li>Any nodes: <code>node()</code></li>
					</ul>
					<li>Processing instruction tests</li>
					<ul>
						<li>Any PI: <code>processing-instruction()</code></li>
						<li>Specific PI: <code>processing-instruction("xml-stylesheet")</code></li>
					</ul>
				</ul>
			</slide>
			<slide id="file-system">
				<title>File System vs. XPath Paths</title>
				<table style="margin : 5% ; " width="60%">
					<tr>
						<th>XPath:</th>
						<td align="center"><code>/</code></td>
						<td align="center"><code>gpx</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>trk</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>trkseg</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>trkpt</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>*</code></td>
					</tr>
					<tr>
						<th># Nodes:</th>
						<td/>
						<td align="center">1</td>
						<td align="center">→</td>
						<td align="center">1</td>
						<td align="center">→</td>
						<td align="center">1</td>
						<td align="center">→</td>
						<td align="center">2930</td>
						<td align="center">→</td>
						<td align="center">8790</td>
					</tr>
				</table>
				<table style="margin : 5% ; " width="50%">
					<tr>
						<th>File System Path:</th>
						<td align="center"><code>/</code></td>
						<td align="center"><code>usr</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>local</code></td>
						<td align="center"><code>/</code></td>
						<td align="center"><code>bin</code></td>
					</tr>
					<tr>
						<th># Nodes:</th>
						<td/>
						<td align="center">1</td>
						<td align="center">→</td>
						<td align="center">1</td>
						<td align="center">→</td>
						<td align="center">1</td>
					</tr>
				</table>
			</slide>
		</part>
		<part id="xpath-predicates">
			<title>Predicates</title>
			<slide id="filters">
				<title>Location Step Filters</title>
				<ul>
					<li>Predicates are filters for a location step</li>
					<ul>
						<li>Each predicate is applied to each selected node individually</li>
					</ul>
					<li>Predicates typically reduce the set of selected nodes</li>
					<li>Each predicate is an XPath and evaluated as a boolean</li>
					<ul>
						<li>If the result is a number, it is compared with the <code>position()</code> function</li>
					</ul>
				</ul>
				<pre>//trkpt[position() = 10]</pre>
				<pre>//trkpt[10]</pre>
			</slide>
			<slide id="path-processing">
				<title>Putting it all together: Location Path Processing</title>
				<ol>
					<li>Start with a given context</li>
					<li>For each location step, repeat the following steps:</li>
					<li>Based on the context and the axis, select the nodes on this axis</li>
					<li>Reduce this selection to nodes matching the node test</li>
					<li>Sequentially apply all predicates to these nodes</li>
					<li>Take the remaining node set as the context for the next location step</li>
				</ol>
			</slide>
		</part>
		<part id="beyond-location-paths">
			<title>Beyond Location Paths</title>
			<slide id="xpath-expressions">
				<title>XPath Expressions</title>
				<ul>
					<li>XPath is a full expression language</li>
					<ul>
						<li>Any evaluated expression in XSLT is an XPath</li>
						<li>XPath must be able to operate on non-XML data types</li>
					</ul>
					<li>XPath has a simple data model</li>
					<ol>
						<li>Node set: <code>//trkpt[ele > 30]</code></li>
						<li>Number: <code>count(//trkpt)</code></li>
						<li>String: <code>/gpx/trk/name/text()</code></li>
						<li>Boolean: <code>contains(/gpx/trk/desc/text(), 'Easy')</code></li>
					</ol>
				</ul>
			</slide>
			<slide id="xpath-1-functions">
				<title>XPath 1.0 Functions</title>
				<ul>
					<li>XPath has a small library of built-in functions</li>
					<li>XPath functions return results of various data types</li>
					<ul>
						<li>Node set: <code>id</code></li>
						<li>Number: <code>ceiling, count, floor, last, number, position, round, string-length, sum</code></li>
						<li>String: <code>concat, local-name, name, namespace-uri, normalize-space, string, substring, substring-after, substring-before, translate</code></li>
						<li>Boolean: <code>boolean, contains, false, lang, not, starts-with, true</code></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="xpath-conclusions">
			<title>Conclusions</title>
			<slide id="xml-regex">
				<title><q>Regular Expressions</q> for XML</title>
				<ul>
					<li>Useful for anybody working with XML</li>
					<li>Simple selections are just tree navigation</li>
					<li>Predicates allow more sophisticated selection</li>
					<li>The XPath 1.0 function set is very limited</li>
				</ul>
			</slide>
			<slide id="xpath-end">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/xml-2022/xpath"><code>dret.net/lectures/xml-2022/xpath</code></a></li>
					<li>More information about myself:</li>
					<ul>
						<li><a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">Twitter: <code>@dret</code></a></li>
						<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
						<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="xpath-2">
		<title short="XPath 2.0">XPath 2.0: From Location Paths to Expressions</title>
		<toc class="resources"><a href="http://www.w3.org/TR/xpath20" title="W3C XPath 2.0 Specification">XPath&#160;2.0&#160;Spec</a></toc>
		<part id="xpath-2-history">
			<title>XPath History</title>
			<slide id="xml-selection-2">
				<title>Selecting Data in XML Documents</title>
				<ul>
					<li>XML documents are trees represented by markup</li>
					<ul>
						<li>Extracting information with plain text tooling is a bad idea</li>
					</ul>
					<li>XML technologies provide support for working with trees</li>
					<ul>
						<li>Programmatic access to the tree should be easy (DOM)</li>
						<li>Validating trees should be easy (XSD)</li>
						<li>Mapping trees should be easy (XSLT)</li>
						<li>Querying tree collections should be easy (XQuery)</li>
						<li>XPath is what regular expressions are for text-based information</li>
					</ul>
				</ul>
			</slide>
			<slide id="xpath-evolution">
				<title>How XPath Evolved</title>
				<ul>
					<li>XSLT was designed to work on arbitrary XML input documents</li>
					<ul>
						<li>Started as a part of XSL (<a href="http://www.w3.org/TR/1998/WD-xsl-19981216">WD-xsl-19981216</a> → <a href="http://www.w3.org/TR/1999/WD-xslt-19990421">WD-xslt-19990421</a>)</li>
					</ul>
					<li>XPath was turned into a standalone specification</li>
					<ul>
						<li>Started as a part of XSLT (<a href="http://www.w3.org/TR/1999/WD-xslt-19990421">WD-xslt-19990421</a> → <a href="http://www.w3.org/1999/07/WD-xslt-19990709">WD-xslt-19990709</a>)</li>
						<li>Reused in a number of other W3C specifications (XSD, DOM)</li>
					</ul>
					<li>Complete overhaul for XSLT 2.0 and XQuery</li>
					<ul>
						<li><a href="http://www.w3.org/TR/xpath20/">XPath 2.0</a> is the core language</li>
						<li>A large set of <a href="http://www.w3.org/TR/xpath-functions/">functions and operators</a></li>
						<li>The underlying <a href="http://www.w3.org/TR/xpath-datamodel/">data model</a> which defines the foundation</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="xpath-1-revisited">
			<title short="XPath 1.0">XPath 1.0 Revisited</title>
			<slide id="xpath-1-expressions">
				<title>XPath Expressions</title>
				<ul>
					<li>XPaths can be location paths</li>
					<pre>/gpx/trk/name</pre>
					<li>XPaths can use functions</li>
					<pre>/gpx/trk/trkseg/trkpt[position() = 42]</pre>
					<li>XPaths can be expressions yielding atomic values</li>
					<pre>count(/gpx/trk/trkseg/trkpt)</pre>
					<li>XPaths can combine all of the above</li>
					<pre>substring(//trkpt[ele > 30][1]/time, 12, 8)</pre>
				</ul>
			</slide>
			<slide>
				<title>Axes</title>
				<img style="width : 86% ; margin : 4% ; " src="xpath-axes.png"/>
			</slide>
		</part>
		<part id="xpath-2-conclusions">
			<title>Conclusions</title>
			<slide id="xpath-end">
				<title>Thank You!</title>
				<img src="end.jpg" title="This is the End" style="float: right ; height : 65% ; margin : 0% 4% 4% 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/xml-2022/xpath-2"><code>dret.net/lectures/xml-2022/xpath-2</code></a></li>
					<li>More information about myself:</li>
					<ul>
						<li><a href="https://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">Twitter: <code>@dret</code></a></li>
						<li><a href="https://www.youtube.com/ErikWilde"><img src="youtube-logo.png" style=" height : 1em ; "/> <code>youtube.com/ErikWilde</code></a></li>
						<li><a href="https://www.linkedin.com/in/erikwilde"><img src="linkedin-logo.png" style=" height : 1em ; "/> <code>linkedin.com/in/erikwilde</code></a></li>
					</ul>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>