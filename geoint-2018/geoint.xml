<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy-new" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="geoint.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title>GEOINT 2018</title>
	<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
	<affiliation><a href="http://www.apiacademy.co/">API Academy</a>, <a href="http://www.ca.com/">CA Technologies</a></affiliation>
	<date short="2018-04-23">April 23, 2018</date>
	<copyright>2018 Erik Wilde</copyright>
	<presentation id="index">
		<title>Accelerating API Availability with Microservices</title>
		<toc class="abstract">Microservices are a relatively recent trend in the enterprise IT architecture space. The main idea of microservice architecture (MSA) is to strictly decouple service implementation, which means that the development and change of MSA services can be quicker than in architectures where any development and change is limited by complex interdependencies and resulting slower implementation cycles. In order to make the pattern of many independently developed services economically and operationally viable, MSA requires high degrees of automation and tooling for development, deployment, and operations. One possible way to look at MSA is to consider it as the application of DevOps ideas within the SOA space.</toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="introduction">
			<title>Introduction</title>
			<slide id="dretwitter">
				<title><code>@dret</code> on Twitter/GitHub</title>
				<img src="dret.png" title="dret" href="http://twitter.com/dret" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="api-academy">
				<title><a href="http://www.apiacademy.co/">API Academy</a></title>
				<img src="academy-logo.png" href="http://www.apiacademy.co/" title="API Academy" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver): <a href="http://twitter.com/MattMcLartyBC" class="twitter-follow-button" title="Matt McLarty on Twitter: @MattMcLartyBC"><code>@MattMcLartyBC</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati): <a href="http://twitter.com/mamund" class="twitter-follow-button" title="Mike Amundsen on Twitter: @mamund"><code>@mamund</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mehdi-medjaoui/">Mehdi Medjaoui</a> (San Francisco): <a href="http://twitter.com/medjawii" class="twitter-follow-button" title="Mehdi Medjaoui on Twitter: @medjawii"><code>@medjawii</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London): <a href="http://twitter.com/mitraman" class="twitter-follow-button" title="Ronnie Mitra on Twitter: @mitraman"><code>@mitraman</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich): <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Publishing (blogs, articles, books, <a href="https://soundcloud.com/user-426834320">podcasts</a>)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="msa-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">free electronic version courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>UC Berkeley (2006-2011), working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>EMC (2011-2014), working on transforming software products into service platforms</li>
					<li>Siemens (2014-2015), working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in 2016 and now all about API Strategy and Design</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="http://dret.typepad.com/dretblog/">my blog</a>, <a href="http://www.linkedin.com/in/netdret">LinkedIn</a>, and <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a></li>
				</ul>
			</slide>
		</part>
		<part id="digital-transformation">
			<title>Digital Transformation</title>
			<part id="high-level-view">
				<title>APIs from 50,000 feet</title>
				<slide id="digital-transformation-crocodile">
					<title>Digital Transformation</title>
					<img href="https://commons.wikimedia.org/wiki/File:Crocodile_Gaping.jpg" src="digital-transformation-crocodile.jpg" title="Digital Transformation: Because being more agile than the competition just may be a good idea..." style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-pattern">
					<title>APIs are a Pattern</title>
					<div style="height: 70%">
						<img style="float: left; object-fit : contain ; margin : 0% 4% 0% 4% ; height: 100% ; " title="Uniform interface" src="pneumatic-tubes.jpg" href="https://twitter.com/NotableHistory/status/529966375125544960"/>
						<img style="float: right; object-fit : contain ; margin : 0% 4% 0% 4% ; height: 100% ; " title="Self-describing representations and stateless interactions" src="nj-gun-permit.png"/>
					</div>
				</slide>
			</part>
			<part id="api-aspects">
				<title>APIs: 3 Drivers, 2 Perspectives, 1 Lifecycle</title>
				<slide id="api-driver-push">
					<title>API Driver #1: Push</title>
					<ul>
						<li>Many environments change at increasing velocities</li>
						<ul>
							<li>Economics change</li>
							<li>Incentives change</li>
							<li>Technologies change</li>
						</ul>
						<li>Organizations are <em>pushed</em> to better handle change</li>
						<ul>
							<li>They have to become better at <em>reacting to external changes</em></li>
							<li>They have to become better at <em>executing internal changes</em></li>
							<li>They have to become better at <em>embracing changing</em></li>
						</ul>
					</ul>
				</slide>
				<slide id="api-driver-pull">
					<title>API Driver #2: Pull</title>
					<ul>
						<li>External: Participating in the <em>API economy</em> becomes increasingly beneficial</li>
						<ul>
							<li>Interfacing with customers/partners becomes easier</li>
							<li>The number of API-ready customers/partners keeps increasing</li>
							<li>The <a href="https://en.wikipedia.org/wiki/Metcalfe%27s_law">network effect</a> guarantees for the trend to continue</li>
						</ul>
						<li>Internal: Being able to plan and execute changing quickly improves fitness</li>
						<ul>
							<li>Traditionally, IT is perceived as a sluggish and heavyweight</li>
							<li>Increasingly, IT becomes the <q>lube</q> for the organizational machinery</li>
							<li>Additionally, IT can allow completely new classes of business models</li>
						</ul>
					</ul>
				</slide>
				<slide id="api-driver-follow">
					<title>API Driver #3: Follow</title>
					<ul>
						<li>Having an <em>API strategy</em> becomes increasingly important</li>
						<ul>
							<li>Organizations have executed on this for a long time (Amazon API memo: 2002)</li>
							<li>Organizations share experiences and tooling around API strategies</li>
						</ul>
						<li>Using APIs becomes less of an <q>if</q> and more of a <q>how</q></li>
						<ul>
							<li>Business pushes IT to make sure strategy can be executed quickly</li>
							<li>IT can leverage others as justification and leaders</li>
						</ul>
					</ul>
				</slide>
				<slide id="two-views">
					<title>Two Views of API Scope/Focus</title>
					<ul>
						<li><em>Internal:</em> Using APIs to break up monolithic systems</li>
						<ul>
							<li>Focus on <em>systems/software engineering</em> and better modularization</li>
							<li><q>Turn a system into an ecosystem.</q></li>
							<li>Use <em>Private APIs</em> as a way to reduce tight coupling</li>
						</ul>
						<li><em>External:</em> Using APIs to build up ecosystems</li>
						<ul>
							<li>Focus on <em>distributed/decentralized systems</em> and better connectivity</li>
							<li><q>Enable an ecosystem by loosely coupling systems.</q></li>
							<li>Use <em>Public APIs</em> as a way to (better) interface with partners/public</li>
						</ul>
						<li>Both views are complementary and mostly a difference in perspective</li>
					</ul>
				</slide>
				<slide id="one-management-cycle">
					<title>One Management Lifecycle</title>
					<img title="API Lifecycle" href="http://blogs.ca.com/2017/01/23/api-management-headed-2017/" src="lifecycle-api.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="digital-transformation-why">
				<title>Digital Transformation: Why?</title>
				<slide id="castle">
					<title>Traditional IT</title>
					<img title="The Perfect Machine" href="https://commons.wikimedia.org/wiki/File:Burg_Hohenzollern_ak.jpg" src="hohenzollern-castle.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="api-economy">
					<title>Business Agility</title>
					<img title="Farmers' Market Sacramento" href="https://commons.wikimedia.org/wiki/File:Farmers'_market_Sacramento.jpg" src="farmers-market-sacramento.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="what">
				<title>Digital Transformation: What?</title>
				<slide id="web-works">
					<title>The Web Works</title>
					<ul>
						<li>MSA is about service autonomy in service-oriented landscapes</li>
						<ul>
							<li><em>Developer autonomy</em> is the freedom to choose the best tools for the job</li>
							<li><em>Operations autonomy</em> means that every service is operated standalone</li>
						</ul>
						<li>MSA is also about effectiveness in autonomy-focused service-oriented landscapes</li>
						<ul>
							<li><em>Rapid provisioning</em> means that getting started is an easy task</li>
							<li><em>Basic monitoring</em> establishes visibility into service operations</li>
							<li><em>Rapid deployment</em> increases the velocity of service landscape evolution</li>
						</ul>
					</ul>
				</slide>
				<slide id="web-industrialized">
					<title>The Web, Industrialized</title>
					<ul>
						<li>MSA applies Web Architecture's <em href="http://dret.net/netdret/publications#pau09a">loose coupling</em> to the API space</li>
						<ul>
							<li>Build services with no hidden dependencies</li>
							<li>Choose the best tool for the job</li>
							<li>Decouple service provisioning from delivery architecture</li>
							<li>Monitor service state and usage</li>
							<li>React quickly when customers or market demand change</li>
							<li>Experiment ruthlessly and keep experimentation cost low</li>
						</ul>
						<li>MSA is all about being webby while minimizing the cost</li>
					</ul>
				</slide>
				<slide id="digitalization-dividends">
					<title><a href="http://queue.acm.org/detail.cfm?id=2956643">Digitalization Dividends</a></title>
					<ol>
						<li>Permissionless Innovation</li>
						<li>Enable Failure</li>
						<li>Disrupt Trust (replaced by autonomy and accountability)</li>
						<li>You Build It, You Own It</li>
						<li>Accelerate Deprecations</li>
						<li>End Centralized Metadata</li>
						<li>Concentrate the Pain</li>
						<li>Test Differently</li>
					</ol>
				</slide>
				<slide id="cargo-cult">
					<title>API/Microservices Cargo Cult</title>
					<img title="Microservices Cargo Cult" src="microservices-cargo-cult.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="how">
				<title>Digital Transformation: How?</title>
				<slide id="digital-transformation-path">
					<title><a href="http://martinfowler.com/articles/microservices.html">The Path to Microservices</a></title>
					<ol>
						<li>Componentization via services</li>
						<li>Organized around business capabilities</li>
						<li>Products not projects</li>
						<li>Smart endpoints and dumb pipes</li>
						<li>Decentralized governance</li>
						<li>Decentralized data management</li>
						<li>Infrastructure automation</li>
						<li>Design for failure</li>
						<li>Evolutionary design</li>
					</ol>
				</slide>
				<slide id="who">
					<title>Microservices for the Masses?</title>
					<ul>
						<li>Microservices are an investment and not a default choice</li>
						<ul>
							<li>The cost is the need for advanced infrastructure and teams</li>
							<li>The return is increased flexibility and agility</li>
							<li>Cost/benefit for microservices is targeted at long term capabilities</li>
						</ul>
						<li>What are the <a href="http://martinfowler.com/bliki/MicroservicePrerequisites.html">prerequisites for considering microservices?</a></li>
						<ol>
							<li><em>Rapid Provisioning:</em> Automated process to quickly create server infrastructure</li>
							<li><em>Monitoring:</em> Multi-level monitoring from service health to business-level logic</li>
							<li><em>Rapid Deployment:</em> Automated ways to quickly move from code to running services</li>
						</ol>
						<li>Moving to MSA is a transition process and not one <em>Big Bang</em></li>
						<ul>
							<li>Just like the Web is never complete/final, neither is a microservices landscape</li>
						</ul>
					</ul>
				</slide>
			</part>
		</part>
		<part id="microservices">
			<title>Microservices</title>
			<part id="microservices-pattern">
				<title>Microservices as a Pattern</title>
				<slide id="microservices-scalability">
					<title>Bottom-Up Motivation: Service Scalability</title>
					<ul>
						<li>Build modularized components that can be scaled individually</li>
						<ul>
							<li><em>Monitoring</em> allows insights into system status and load</li>
							<li><em>Rapid Provisioning</em> allows to react quickly when new capacity is required</li>
							<li><em>Rapid Deployment</em> means simple ways to develop/test/start/scale services</li>
						</ul>
						<li>Microservice implementations are more flexible than integrated approaches</li>
						<ul>
							<li>Scaling can be done per service instead of scaling bigger deployment units</li>
							<li>Code can be retired more easily by removing services from deployment</li>
							<li>Fewer unintended side-effects since all interactions are through APIs</li>
						</ul>
					</ul>
				</slide>
				<slide id="microservices-digital-transformation">
					<title>Top-Down Motivation: Digital Transformation</title>
					<ul>
						<li>IT capabilities and management often are not aligned</li>
						<ul>
							<li><em>Capabilities</em> are growing and business demands are growing as well</li>
							<li><em>Management</em> becomes complex and impacts execution speed</li>
						</ul>
						<li>There is a difference in separating interfaces and implementations</li>
						<ul>
							<li><em>Interfaces</em> are useful for accessing capabilities</li>
							<li><em>Implementations</em> must support easy modifications and additions</li>
						</ul>
						<li>The first wave of <em>API focus (SOA)</em> focused on interfaces only</li>
						<ul>
							<li>Focusing on APIs as <em>business-aligned capabilities</em> is a necessary first step</li>
							<li>Agility suffers when implementations are not business-aligned</li>
							<li><a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway's Law</a> means that changing implementation structure can be hard</li>
						</ul>
					</ul>
				</slide>
				<slide id="soapy-soa">
					<title>The SOA Crisis</title>
					<ul>
						<li>SOAP-style SOA are traditional IT monoliths exposing some capabilities</li>
						<li>MSA #1 goal is to create a loosely coupled service landscape</li>
						<ul>
							<li>Shared data storage creates coupling</li>
							<li>Shared infrastructure creates coupling</li>
							<li>Shared libraries create coupling</li>
							<li>Loose coupling allows to pick the right tool for the job</li>
							<li>Loose coupling allows to refactor/retire as required</li>
							<li>Loose coupling blurs the public/partner/private lines</li>
						</ul>
						<li><em>Using APIs</em> is one of the few overlaps between SOAP-style SOA and MSA</li>
					</ul>
				</slide>
				<slide id="microservices-are-soa">
					<title>Microservices are SOA!</title>
					<img title="Microservices are SOA!" src="microservices-are-soa.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="microservices-are-good-soa">
					<title>Microservices are SOA done Right!</title>
					<ul>
						<li><em>Decouple implementations</em> and not just interfaces</li>
						<li><em>Velocity</em> is determined by how hard it is to make changes</li>
						<li>The biggest problem is not <em>access to capabilities</em> but <em>capability agility</em></li>
						<ul>
							<li>Providing access to capabilities is better than doing nothing</li>
							<li><em>Agile management of the capability landscape</em> goes further than that</li>
						</ul>
						<li>Microservices apply <em>Web architecture</em> to <em>Enterprise IT</em></li>
						<ul>
							<li>Implementation details are completely invisible to service users</li>
							<li>Service consumption <em>only</em> uses well-defined and uniform interfaces</li>
						</ul>
					</ul>
				</slide>
				<slide id="monolith">
					<title>The Dreaded Monolith</title>
					<img title="Where you come from…" href="https://upload.wikimedia.org/wikipedia/commons/7/7b/Weltmaschine_gsellmann1.JPG" src="monolith.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="msa-neat">
					<title>Microservices: The Starting Point</title>
					<img title="Where you think you're going…" href="https://static.pexels.com/photos/12598/96917deb7705adcee76b65caf8c652b1.jpg" src="microservices-ideal.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="msa-messy">
					<title>Microservices Over Time</title>
					<img title="By Lachlan Donald from Melbourne, Australia (Sharpest tool in the shed) [CC BY 2.0 (http://creativecommons.org/licenses/by/2.0)], via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File%3AHuge_collection_of_tools_in_a_store_in_Chloride%2C_a_ghost_town_in_New_Mexico%2C_USA_-_July_2013.jpg" src="microservices-reality.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="msa-journey">
				<title>The MSA Journey</title>
				<slide id="change">
					<title>Transformation: Changing vs. Changeable</title>
					<ul>
						<li><em>Changing</em> implies a one-time activity</li>
						<li><em>Changeable</em> implies an intrinsic property</li>
						<blockquote>
							<p>Don't focus on what to <b>change into</b>;<br/>Focus on <b>embracing change</b> as your mode of existence.</p>
						</blockquote>
					</ul>
				</slide>
				<slide id="strangler">
					<title>Strangling the Monolith</title>
					<img title="Strangler Vine" href="https://commons.wikimedia.org/wiki/File:Strangler_tree.jpg" src="strangler-vine.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
				<slide id="good-strangling">
					<title>How to Strangle Well</title>
					<ul>
						<li>Manage access to old/new capabilities through a router or gateway</li>
						<ul>
							<li>Transitioning is a management process old/new should be unaware of</li>
						</ul>
						<li>Data sync/update is a separately managed process</li>
						<ul>
							<li>Sophistication and cost of sync/update depends on consistency requirements</li>
							<li>When one of the services disappears sync/update can be removed</li>
						</ul>
						<li>Manage/monitor transition of service replacement</li>
						<ul>
							<li>At some point in time decommissioning may be the most economical option</li>
							<li>Until then the <em>strangled monolith</em> is the best case scenario</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="microservices-and-apis">
				<title>Microservices and APIs</title>
				<slide id="microservice-api">
					<title>There is no <q>Microservices API</q></title>
					<ul>
						<li>Microservices are all about <em>how to implement services</em></li>
						<li>APIs are all about <em>how to interact with services</em></li>
						<li>Microservices are an implementation detail from the API perspective</li>
						<li>Microservice-implemented APIs might exhibit certain properties</li>
						<ul>
							<li>Changing more often because of faster implementation cycles</li>
							<li>More diverse <em>API landscapes</em> because of more autonomy</li>
							<li>Smaller scope because of solutions targeted at specific problems</li>
						</ul>
					</ul>
				</slide>
				<slide id="microservice-api-design">
					<title>Designing Microservice APIs</title>
					<ul>
						<li>API consumers just use an <em>API</em> and not a <em>Microservice API</em></li>
						<ul>
							<li>Microservice API design is no different from API design in general</li>
						</ul>
						<li>Balancing autonomy/diversity and coherence/usability is necessary</li>
						<ul>
							<li>Microservices should have <em>freedom</em> to design their APIs</li>
							<li>API design should be driven by <em>design culture and patterns</em></li>
							<li>Microservices strategy needs to distill/document/distribute design patterns</li>
						</ul>
					</ul>
				</slide>
				<slide id="microservice-api-focus">
					<title>Focus Areas for Microservice APIs</title>
					<ul>
						<li>Be explicit about openness and extensibility</li>
						<li>Provide <em>glue</em> that makes combining services easy</li>
						<ul>
							<li>At the minimal level, always use global, unique, and persistent <em>identifiers</em></li>
							<li>Consider using <em>hypermedia</em> as a way to support service orchestration</li>
						</ul>
						<li>Be explicit about how services signal end-of-life</li>
					</ul>
				</slide>
			</part>
		</part>
		<part id="api-acceleration">
			<title>Accelerating API Availability</title>
			<part id="integration-apis">
				<title>From Integration to APIs</title>
				<slide id="one-management-cycle">
					<title>Manage Your Services/APIs</title>
					<img title="API Lifecycle" href="http://blogs.ca.com/2017/01/23/api-management-headed-2017/" src="lifecycle-api.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
				</slide>
			</part>
			<part id="graphql">
				<title>GraphQL</title>
				<slide id="graphql-history">
					<title>GraphQL History</title>
					<img src="graphql-logo.png" href="http://graphql.org/" style="float : right ; width : 20% ; margin-top : 0.5em ; margin-right : 2em ; "/>
					<ul>
						<li>Facebook wanted a way for clients to more specifically query content</li>
						<ul>
							<li>Facebook's dataset is a very large interconnected graph</li>
							<li>Clients want specific parts of it depending on various context factors</li>
						</ul>
						<li>GraphQL is not an API but a language for building APIs</li>
						<ul>
							<li>GraphQL defines a type system and a query language that produces JSON results</li>
							<li>The query language can be integrated into an API <a href="http://graphql.org/learn/serving-over-http/">in a variety of ways</a></li>
						</ul>
						<li>GraphQL also has <a href="http://graphql.org/learn/queries/#mutations">mutations</a> as a way to update data</li>
						<ul>
							<li><a href="http://graphql.org/learn/schema/#input-types">Input types</a> look like types but only <em>accept input data</em></li>
						</ul>
					</ul>
				</slide>
				<slide id="graphql-example">
					<title>Simple GraphQL Example</title>
					<table style="width: 90% ; ">
						<tr>
							<td style="vertical-align: top ; ">
								<listing src="graphql-simple-query.graphql" href="https://graphql.org/learn/schema/#type-system"/>
							</td>
							<td style="vertical-align: top ; ">
								<listing src="graphql-simple-response.json" href="https://graphql.org/learn/schema/#type-system"/>
							</td>
						</tr>
					</table>
				</slide>
				<slide id="graphql-types">
					<title>GraphQL Queries and Types</title>
					<table style="width: 90% ; ">
						<tr>
							<td style="vertical-align: top ; ">
								<listing src="graphql-query.graphql" href="https://graphql.org/"/>
							</td>
							<td style="vertical-align: top ; ">
								<listing src="graphql-types.graphql" href="https://graphql.org/"/>
							</td>
						</tr>
					</table>
				</slide>
			</part>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/geoint-2018"><code>dret.net/lectures/geoint-2018</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/geoint-2018"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>