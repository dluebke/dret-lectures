<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="hotspot/hotspot/hotspot.xsl"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="apiacademy" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="nordic-apis.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/apiacademy/apiacademy/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title><a href="http://nordicapis.com/">Nordic APIs</a> <a href="http://nordicapis.com/events/the-2017-api-platform-summit/">2017 Platform Summit</a></title>
	<presentation id="index">
		<title>From Platforms to Ecosystems</title>
		<toc class="abstract">APIs are often used as a way to decrease coupling and enable an evolving ecosystem of business capabilities. However, when confined to a concrete "API Platform", many of the possible degrees of freedom can be inhibited, stifling the decoupling and innovation that was one of the initial driving factors to start an API strategy and program. One important aspect of API strategy therefore is to make conscious choices where to allow and make decisions for individual APIs and services, and the overall ecosystem. Distilling patterns and practices from the evolving ecosystem of APIs into recommendations and conventions becomes an essential part of moving from static platforms to constantly evolving ecosystems. The goal is to find the optimal balance between complete autonomy for each API design and implementation, and a supporting ecosystem that both constrains and supports APIs as a way to improve the overall ecosystem value.</toc>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a> <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret">(<code>@dret</code>)</a></author>
		<affiliation><a href="http://www.apiacademy.co/">API Academy</a>, <a href="http://www.ca.com/">CA Technologies</a></affiliation>
		<date short="2017-10-10">October 10, 2017</date>
		<copyright>2017 Erik Wilde</copyright>
		<toc class="resources"><a href="http://www.apiacademy.co/">API Academy</a>&#160;· <a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/" title="Mike Amundsen, Matt McLarty, Ronnie Mitra, and Irakli Nadareishvili, 'Microservice Architecture: Aligning Principles, Practices, and Culture', O'Reilly Media, June 2016">MSA Book</a></toc>
		<slide id="summary">
			<title>Summary</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="introduction">
			<title>Introduction</title>
			<slide id="dret">
				<title>About Me</title>
				<ul>
					<li><a href="http://dret.net/netdret/publications#wil97b">Ph.D. in Communications Systems</a> from <a href="http://www.ethz.ch/">ETH Zürich</a></li>
					<li>Working on Web Architecture after writing <a href="http://dret.net/netdret/publications#wil98">the first Web Technology book</a></li>
					<li>UC Berkeley (2006-2011), working on <a href="http://dret.net/netdret/publications#wil09g">Service Models for Open Government</a></li>
					<li>EMC (2011-2014), working on transforming software products into service platforms</li>
					<li>Siemens (2014-2015), working on using <em title="Internet of Things">IoT</em> to build <em title="Web of Things">WoT</em> (<q>APIs for Things</q>)</li>
					<li>Joined <a href="http://www.ca.com/" title="CA Technologies">CA</a>'s <a href="http://www.apiacademy.co/">API Academy</a> in 2016 and now all about API Strategy and Design</li>
					<li>Active in the usual places such as <a href="http://twitter.com/dret" title="@dret">Twitter</a>, <a href="http://github.com/dret" title="dret">GitHub</a>, <a href="http://dret.typepad.com/dretblog/">my blog</a>, <a href="http://www.linkedin.com/in/netdret">LinkedIn</a>, and <a href="https://www.flickr.com/photos/dret/" title="dret">flickr</a></li>
				</ul>
			</slide>
			<slide id="api-academy">
				<title><a href="http://www.apiacademy.co/">API Academy</a></title>
				<img src="apiacademy-red-black.png" href="http://www.apiacademy.co/" title="API Acacdemy" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Global Team working on <em>API Strategy and Design</em> topics</li>
					<ul>
						<li><a href="http://www.apiacademy.co/team_member/matt-mclarty/">Matt McLarty</a> (Vancouver): <a href="http://twitter.com/MattMcLartyBC" class="twitter-follow-button" title="Matt McLarty on Twitter: @MattMcLartyBC"><code>@MattMcLartyBC</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mike-amundsen/">Mike Amundsen</a> (Cincinnati): <a href="http://twitter.com/mamund" class="twitter-follow-button" title="Mike Amundsen on Twitter: @mamund"><code>@mamund</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/mehdi-medjaoui/">Mehdi Medjaoui</a> (San Francisco): <a href="http://twitter.com/medjawii" class="twitter-follow-button" title="Mehdi Medjaoui on Twitter: @medjawii"><code>@medjawii</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/ronnie-mitra/">Ronnie Mitra</a> (London): <a href="http://twitter.com/mitraman" class="twitter-follow-button" title="Ronnie Mitra on Twitter: @mitraman"><code>@mitraman</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
						<li><a href="http://www.apiacademy.co/team_member/erik-wilde/">Erik Wilde</a> (Zürich): <a href="http://twitter.com/dret" class="twitter-follow-button" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a><script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script></li>
					</ul>
					<li>Evangelizing ideas and technologies</li>
					<ul>
						<li>Speaking (conferences, events)</li>
						<li>Teaching (workshops, bootcamps)</li>
						<li>Publishing (blogs, articles, books, <a href="https://soundcloud.com/user-426834320">podcasts</a>)</li>
						<li>Doing (side projects on API-related topics)</li>
						<li>Standardizing (participating in specification work)</li>
					</ul>
				</ul>
			</slide>
			<slide id="msa-book">
				<title>Microservice Architecture</title>
				<img src="msa-cover.jpg" href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html" title="Microservice Architecture: Aligning Principles, Practices, and Culture" style="float: right ; height : 55% ; margin : 4% ; "/>
				<ul>
					<li><q>Microservice Architecture: Aligning Principles, Practices, and Culture</q></li>
					<li><a href="http://www.apiacademy.co/microservice-architecture-the-oreilly-book/">Authored by</a> <a href="http://www.apiacademy.co/">API Academy</a> members Irakli Nadareishvili, Ronnie Mitra, Matt McLarty, and Mike Amundsen</li>
					<ul>
						<li>Get <a href="http://transform.ca.com/API-microservice-architecture-oreilly-book.html">free electronic version courtesy of CA Technologies</a></li>
						<li>Get <a href="http://shop.oreilly.com/product/0636920050308.do">a hardcopy version</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="two-platform-concepts">
			<title>Two Platform Concepts</title>
			<slide id="innovation">
				<title>Platforms and Innovation</title>
				<img title="Innovation only works bottom-up" src="innovation.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="platform-dilemma">
				<title>The Platform Dilemma</title>
				<ul>
					<li>Platforms provide <em>support</em> but also create <em>constraints</em></li>
					<ul>
						<li><em>Support</em> in the form of a foundation and shared services/infrastructure</li>
						<li><em>Constraints</em> in the form of removing certain design options</li>
					</ul>
					<li>Balancing support and constraints is not always done explicitly</li>
					<ul>
						<li><em>Adding features</em> is more immediately visible than <em>removing options</em></li>
						<li><a href="">Programming the People Platform</a> encourages platforms to evolve in a decentralized way</li>
					</ul>
					<li><em>Microservices</em> for the first time in enterprise IT take a step <q>back</q></li>
					<ul>
						<li><em>Remove constraints</em> to foster innovation and give teams more solution options</li>
						<li><em>Add support</em> mostly in an attempt to make the platform economically viable</li>
					</ul>
				</ul>
			</slide>
			<slide id="esb-platform">
				<title>Shared Runtime for Services: ESB</title>
				<ul>
					<li>Platforms often are conceived as <em>being actual infrastructure</em></li>
					<ul>
						<li><em>Centralized components</em> that provide capabilities and host services</li>
						<li>They become convenient components where every infrastructure problem is solved</li>
					</ul>
					<li>Is the <em>ESB platform pattern</em> an inescapable vicious circle?</li>
					<ul>
						<li>What if <em>every capability had to be an API-driven service itself?</em></li>
						<li>What if the platform would focus on <em>defining/providing APIs?</em></li>
					</ul>
				</ul>
			</slide>
			<slide id="web-platform">
				<title>Principles/Protocols/Practices (P<sup>3</sup>): The Web Platform</title>
				<ul>
					<li>A set of shared <em>principles</em>, <em>protocols</em>, and <em>practices</em></li>
					<ul>
						<li><em>Principles</em> govern the general architectural style (REST)</li>
						<li><em>Protocols</em> define the way in which components interact</li>
						<li><em>Practices</em> are design patterns for when/how to use certain protocols</li>
					</ul>
					<li>The Web is and always has been about microservices</li>
					<ul>
						<li><em>Encapsulation</em> and strict API-only interactions</li>
						<li><em>Services</em> can start/evolve/succeed/fail/disappear entirely on their own</li>
						<li><em>Discovery</em> is just another service</li>
						<li><em>Description</em> is part of a service itself and as much as necessary</li>
					</ul>
					<li><em>Shared nothing</em> architecture with no single point of contention</li>
				</ul>
			</slide>
		</part>
		<part id="p3-example">
			<title>P<sup>3</sup> Example: Service Sunsets</title>
			<slide id="why-what-how">
				<title>Managing P<sup>3</sup>: Separating Why/What/How</title>
				<ul>
					<li><em>Why</em> is there a need to provide a capability?</li>
					<ul>
						<li>Some requirements may be <em>ecosystem-driven</em></li>
						<li>Some requirements may be <em>service-driven</em></li>
					</ul>
					<li><em>What</em> can be done to API-enable the capability?</li>
					<ul>
						<li>Design capabilities so that they become <em>part of the service ecosystem</em></li>
						<li>Some capabilities may become <em>API-enabled services</em></li>
						<li>Some capabilities may become <em>part of the API design culture</em></li>
					</ul>
					<li><em>How</em> can services expose/use a capability?</li>
					<ul>
						<li>APIs are <em>strictly about the service surface</em></li>
						<li>Service implementation is a separate concern</li>
						<li>Provide assistance for <em>implementation</em> and <em>testing</em></li>
					</ul>
				</ul>
			</slide>
			<slide id="service-sunset-why">
				<title>Why? No Service Lives Forever</title>
				<img title="Sunset" href="https://www.flickr.com/photos/dret/5960563328" src="sunset.jpg" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
			<slide id="service-sunset-what">
				<title>What? Signal Sunsets with <a href="http://webconcepts.info/concepts/http-header/Sunset">HTTP <code>Sunset</code></a></title>
				<ul>
					<li>APIs can change in terms of features and will be decommissioned at some point</li>
					<ul>
						<li><a href="http://dret.typepad.com/dretblog/2016/04/robust-extensibility.html">Robust extensibility</a> helps to facilitate non-breaking API changes</li>
						<li><em>Hypermedia</em> helps as a pattern to extend extensibility beyond data models</li>
						<li><a href="http://semver.org/">Semantic versioning</a> may be used to keep track of API changes</li>
						<li><a href="http://dret.typepad.com/dretblog/2015/08/http-sunset-header.html">HTTP <code>Sunset</code>ting</a> can be used to signal upcoming sunsets on the HTTP level</li>
					</ul>
					<li>One possible pattern is that <em>APIs</em> should support <a href="http://webconcepts.info/concepts/http-header/Sunset">HTTP <code>Sunset</code></a></li>
					<ul>
						<li>Services must document/describe the support of <code>Sunset</code></li>
						<li>Services may implement <code>Sunset</code> any way they like</li>
					</ul>
				</ul>
			</slide>
			<slide id="service-sunset-how">
				<title>How? Whatever makes most sense…</title>
				<ul>
					<li>Implementation is up to individual services</li>
					<li>Implementation options will change over time</li>
					<ul>
						<li>Control the header through code explicitly written for the service</li>
						<li>Use an HTTP framework that treats sunsets as an aspect</li>
						<li>Provide configurable support in the <em>connective fabric</em> of the service ecosystem</li>
					</ul>
					<li><em><q>How</q></em> evolves more quickly than <em><q>What</q></em></li>
					<ul>
						<li><em><q>What</q></em> are the shared design practices of the API ecosystem</li>
						<li><em><q>How</q></em> is the shared implementation practice across teams</li>
					</ul>
				</ul>
			</slide>
			<slide id="capability-sedimentation">
				<title>Capability Sedimentation</title>
				<img title="Capability Sedimentation" src="capability-sedimentation.png" style=" width : 90% ; height : 70% ; object-fit : contain ; margin : 0% 4% 0% 4% ; "/>
			</slide>
		</part>
		<part id="conclusions">
			<title>Conclusions</title>
			<slide id="sustainable-service-systems">
				<title>Sustainable Service Systems</title>
				<ul>
					<li>Starting from the <em><q>why</q></em> figure out the <em><q>what</q></em></li>
					<li>Focus on the <em><q>what</q></em> and consider <em><q>how</q></em> options</li>
					<li>Support <em><q>how</q></em> through tooling or service fabric instrumentation</li>
				</ul>
			</slide>
			<slide id="webconcepts">
				<title>Advertisement! <a href="http://webconcepts.info/">Web Concepts</a>!</title>
				<ul>
					<li>The <em>Web API Ecosystem</em> is based on a set of shared protocols and practices</li>
					<ul>
						<li>There is a number of <a href="http://webconcepts.info/concepts/">concepts</a> that establish shared understanding</li>
						<li>Each term in the vocabulary of Web concepts is <a href="http://webconcepts.info/specs/">defined in a specification</a></li>
					</ul>
					<li>Each API ecosystem uses an <em>extended subset</em> of the public set of Web concepts</li>
					<ul>
						<li><em>Removing concepts/values</em> means that these are not part of the design practices</li>
						<li><em>Adding values</em> means a bigger vocabulary for a concept</li>
						<li><em>Adding concepts</em> means a different kind of thing in your design practice</li>
					</ul>
					<li>Managing your ecosystem in essence means managing your <em>API concepts</em></li>
					<ul>
						<li>Separate the <em><q>what</q></em> from the <em><q>how</q></em> in your ecosystem</li>
					</ul>
				</ul>
			</slide>
			<slide id="q-and-a">
				<title>Thanks! Q&amp;A</title>
				<img src="where-to.png" title="What's Next?" style="float: right ; width : 30% ; margin : 4% ; "/>
				<ul>
					<li>Slides online: <a href="http://dret.net/lectures/nordic-apis-2017"><code>dret.net/lectures/nordic-apis-2017</code></a></li>
					<li>Slide sources: <a href="http://github.com/dret/lectures/tree/master/nordic-apis-2017"><code>dret/lectures</code></a> on <a href="http://github.com/">GitHub</a></li>
					<li>Me: <a href="http://dret.net/netdret/"><code>http://dret.net/netdret/</code></a></li>
					<li>Twitter: <a href="http://twitter.com/dret" class="twitter-follow-button" data-size="large" title="Erik Wilde on Twitter: @dret"><code>@dret</code></a></li>
				</ul>
			</slide>
		</part>
	</presentation>
</hotspot>